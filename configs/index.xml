<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configs on vedevilolivedev Blog</title><link>https://blog.evilolive.dev/configs/</link><description>Recent content in Configs on vedevilolivedev Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 10 May 2022 18:40:00 -0600</lastBuildDate><atom:link href="https://blog.evilolive.dev/configs/index.xml" rel="self" type="application/rss+xml"/><item><title>Doom Config</title><link>https://blog.evilolive.dev/configs/my-lit-doom-config/emacs/</link><pubDate>Tue, 10 May 2022 18:40:00 -0600</pubDate><guid>https://blog.evilolive.dev/configs/my-lit-doom-config/emacs/</guid><description>Headers ;;; config.el -*- lexical-binding: t; -*- ;;; packages.el -*- lexical-binding: t; no-byte-compile: t; -*- User info The real version has the proper info obviously.
(setq user-full-name &amp;#34;redacted&amp;#34; user-mail-address &amp;#34;redacted&amp;#34;) GPG/Security setup Set the settings for authorization/passwords. Don&amp;rsquo;t really use this but set anyway.
(setq auth-sources &amp;#39;(&amp;#34;~/.authinfo.gpg&amp;#34;)) System-specific Hostnames hidden here. But they look like
(defconst HOSTNAME (string-equal (system-name) &amp;#34;hostname&amp;#34;)) UI Dashboard Fancy splash image (setq fancy-splash-image (concat doom-private-dir &amp;#34;/splash/doomslant.</description><content>&lt;h2 id="headers">Headers&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;; config.el -*- lexical-binding: t; -*-&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;; packages.el -*- lexical-binding: t; no-byte-compile: t; -*-&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="user-info">User info&lt;/h2>
&lt;p>The real version has the proper info obviously.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq &lt;span style="color:#a6e22e">user-full-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;redacted&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user-mail-address &lt;span style="color:#e6db74">&amp;#34;redacted&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="gpg-security-setup">GPG/Security setup&lt;/h2>
&lt;p>Set the settings for authorization/passwords. Don&amp;rsquo;t really use this but set anyway.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq auth-sources &lt;span style="color:#f92672">&amp;#39;&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;~/.authinfo.gpg&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="system-specific">System-specific&lt;/h2>
&lt;p>Hostnames hidden here. But they look like&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(defconst HOSTNAME (&lt;span style="color:#a6e22e">string-equal&lt;/span> (&lt;span style="color:#a6e22e">system-name&lt;/span>) &lt;span style="color:#e6db74">&amp;#34;hostname&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ui">UI&lt;/h2>
&lt;h3 id="dashboard">Dashboard&lt;/h3>
&lt;h4 id="fancy-splash-image">Fancy splash image&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq fancy-splash-image (&lt;span style="color:#a6e22e">concat&lt;/span> doom-private-dir &lt;span style="color:#e6db74">&amp;#34;/splash/doomslant.png&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="utility-functions">Utility Functions&lt;/h4>
&lt;p>These functions are also a convenience one so don&amp;rsquo;t have to repeat them.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(defun +ved/loadlit ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Load the lit.org from ~/.doom.d or whatever the private dir is.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (find-file (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;lit.org&amp;#34;&lt;/span> doom-private-dir)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun +ved/ffchez ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Explore the chezmoi dotfiles directory since this is frequented.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (doom-project-find-file &lt;span style="color:#e6db74">&amp;#34;~/chezmoi/dotfiles/&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun +ved/loadzshlit ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Open the ZSH literate config file.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (find-file (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;~/ZSH-lit.org&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="change-the-mapping">Change the mapping&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(map! :map +doom-dashboard-mode-map
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;f&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>find-file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;r&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>consult-recent-file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;p&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>doom/open-private-config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;l&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/loadlit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;c&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/ffchez
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;z&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/loadzshlit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;B&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>consult-buffer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;q&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>save-buffers-kill-terminal)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="menu-change">Menu Change&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq +doom-dashboard-menu-sections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((&lt;span style="color:#e6db74">&amp;#34;Open File&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :icon (all-the-icons-octicon &lt;span style="color:#e6db74">&amp;#34;file-text&amp;#34;&lt;/span> :face &lt;span style="color:#e6db74">&amp;#39;doom-dashboard-menu-title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :action find-file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Recently Opened Files&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :icon (all-the-icons-octicon &lt;span style="color:#e6db74">&amp;#34;history&amp;#34;&lt;/span> :face &lt;span style="color:#e6db74">&amp;#39;doom-dashboard-menu-title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :action consult-recent-file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Open EMACS Config Dir&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :icon (all-the-icons-faicon &lt;span style="color:#e6db74">&amp;#34;folder-open-o&amp;#34;&lt;/span> :face &lt;span style="color:#e6db74">&amp;#39;doom-dashboard-menu-title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :action doom/open-private-config)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Open EMACS Literate ORG File&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :icon (all-the-icons-fileicon &lt;span style="color:#e6db74">&amp;#34;emacs&amp;#34;&lt;/span> :face &lt;span style="color:#e6db74">&amp;#39;doom-dashboard-menu-title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :action +ved/loadlit)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Open ZSH Literate File&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :icon (all-the-icons-fileicon &lt;span style="color:#e6db74">&amp;#34;org&amp;#34;&lt;/span> :face &lt;span style="color:#e6db74">&amp;#39;doom-dashboard-menu-title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :action +ved/loadzshlit)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Open Chezmoi Dotfiles Dir&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :icon (all-the-icons-octicon &lt;span style="color:#e6db74">&amp;#34;home&amp;#34;&lt;/span> :face &lt;span style="color:#e6db74">&amp;#39;doom-dashboard-menu-title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :action +ved/ffchez)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="better-buffer-name">Better Buffer Name&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq +doom-dashboard-name &lt;span style="color:#e6db74">&amp;#34; Doom&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="font">Font&lt;/h3>
&lt;p>Still trying to figure out which I like best.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq doom-font (&lt;span style="color:#a6e22e">font-spec&lt;/span> :family &lt;span style="color:#e6db74">&amp;#34;FiraMono Nerd Font&amp;#34;&lt;/span> :size &lt;span style="color:#ae81ff">13&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-big-font (&lt;span style="color:#a6e22e">font-spec&lt;/span> :family &lt;span style="color:#e6db74">&amp;#34;FiraMono Nerd Font&amp;#34;&lt;/span> :size &lt;span style="color:#ae81ff">18&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-variable-pitch-font (&lt;span style="color:#a6e22e">font-spec&lt;/span> :family &lt;span style="color:#e6db74">&amp;#34;FiraCode Nerd Font&amp;#34;&lt;/span> :size &lt;span style="color:#ae81ff">13&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-serif-font (&lt;span style="color:#a6e22e">font-spec&lt;/span> :family &lt;span style="color:#e6db74">&amp;#34;CodeNewRoman Nerd Font&amp;#34;&lt;/span> :weight &lt;span style="color:#e6db74">&amp;#39;regular&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-unicode-font doom-font)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="theme">Theme&lt;/h3>
&lt;p>Unpin doom-themes&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(unpin! doom-themes)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Got this for in case I start using one config for two computers. Maybe remove this.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;(when CRIUS (setq doom-theme &amp;#39;doom-outrun-electric))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(setq doom-theme &lt;span style="color:#e6db74">&amp;#39;doom-tokyo-night&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(setq doom-tokyo-night-padded-modeline &lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; (setq! doom-outrun-electric-brighter-comments t)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; (when DENM (setq doom-theme &amp;#39;doom-dracula))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; (when (eq doom-theme &amp;#39;doom-dracula)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; (setq! doom-dracula-colorful-headers t))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(setq! doom-themes-padded-modeline &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="modeline-settings">Modeline Settings&lt;/h3>
&lt;p>So it doesnt bump up all the way against the frame. Still might need some padding.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-buffer-file-name-style &lt;span style="color:#e6db74">&amp;#39;truncate-upto-root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-major-mode-icon &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-major-mode-color-icon &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-buffer-encoding &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-workspace-name &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-persp-name &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-indent-info &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> all-the-icons-scale-factor &lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="nyan-mode">Nyan Mode&lt;/h4>
&lt;p>Always must have.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! nyan-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! nyan-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :after doom-modeline
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (nyan-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :custom
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (nyan-animate-nyancat &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (nyan-wavy-trail &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (nyan-bar-length &lt;span style="color:#ae81ff">27&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="set-indicator-colors-in-modeline">Set indicator colors in modeline&lt;/h4>
&lt;p>I like these to also match the cursor, so below is about the same colors (some adjustments for visibility).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(custom-set-faces!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(doom-modeline-evil-insert-state :foreground &lt;span style="color:#e6db74">&amp;#34;#00eeee&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(doom-modeline-evil-normal-state :foreground &lt;span style="color:#e6db74">&amp;#34;#Cd5555&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(doom-modeline-evil-visual-state :foreground &lt;span style="color:#e6db74">&amp;#34;#6c7b8b&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(match :foreground &lt;span style="color:#e6db74">&amp;#34;#000000&amp;#34;&lt;/span> :background &lt;span style="color:#e6db74">&amp;#34;#ff02ab&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Matching cursor&lt;/p>
&lt;p>Except visual cause otherwise it&amp;rsquo;s hard to see sometimes&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq! evil-normal-state-cursor &lt;span style="color:#f92672">&amp;#39;&lt;/span>(box &lt;span style="color:#e6db74">&amp;#34;#Ee0000&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> evil-insert-state-cursor &lt;span style="color:#f92672">&amp;#39;&lt;/span>(box &lt;span style="color:#e6db74">&amp;#34;#00eeee&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> evil-visual-state-cursor &lt;span style="color:#f92672">&amp;#39;&lt;/span>((hbar &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>) &lt;span style="color:#e6db74">&amp;#34;#Ee1289&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="linenumber-colors">Linenumber colors&lt;/h3>
&lt;p>Defaults for electric were too dark, so changing it here.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! display-line-numbers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (custom-set-faces!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(line-number :foreground &lt;span style="color:#e6db74">&amp;#34;#6C7B8B&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(line-number-current-line :foreground &lt;span style="color:#e6db74">&amp;#34;#FFFFFF&amp;#34;&lt;/span> :weight bold)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="jenkinsfile-enable-line-numbers">Jenkinsfile enable line numbers&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(add-hook! &lt;span style="color:#e6db74">&amp;#39;jenkinsfile-mode-hook&lt;/span> (display-line-numbers-mode &lt;span style="color:#ae81ff">1&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="beacon">Beacon&lt;/h3>
&lt;p>Highlights the point when scrolling and changing windows and such&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! beacon)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! beacon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (beacon-mode &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq! beacon-color &lt;span style="color:#e6db74">&amp;#34;#ee1289&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> beacon-blink-delay &lt;span style="color:#ae81ff">0.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> beacon-blink-duration &lt;span style="color:#ae81ff">0.5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> beacon-blink-when-focused &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="rainbow-mode">Rainbow Mode&lt;/h3>
&lt;p>Show background of colors when colors are set.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! rainbow-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :hook ((text-mode prog-mode) &lt;span style="color:#f92672">.&lt;/span> rainbow-mode))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(add-hook! &lt;span style="color:#e6db74">&amp;#39;rainbow-mode-hook&lt;/span> (hl-line-mode (if rainbow-mode &lt;span style="color:#ae81ff">-1&lt;/span> &lt;span style="color:#ae81ff">+1&lt;/span>)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="fix-color-menu">Fix color menu&lt;/h4>
&lt;p>MacOS misses the thing that does colors like DeepPink2 in the menu. This fixes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(require &lt;span style="color:#e6db74">&amp;#39;facemenu&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="show-parens">Show Parens&lt;/h3>
&lt;p>Sets the colors for show parens&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(custom-set-faces!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(show-paren-match :foreground &lt;span style="color:#e6db74">&amp;#34;#2f4f4f&amp;#34;&lt;/span> :background &lt;span style="color:#e6db74">&amp;#34;#00ee00&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(show-paren-mismatch :background &lt;span style="color:#e6db74">&amp;#34;#ee0000&amp;#34;&lt;/span> :foreground &lt;span style="color:#e6db74">&amp;#34;#fffc00&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(show-paren-match-expression :background &lt;span style="color:#e6db74">&amp;#34;#00868b&amp;#34;&lt;/span> :foreground &lt;span style="color:#e6db74">&amp;#34;#ffffff&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(match :foreground &lt;span style="color:#e6db74">&amp;#34;#000000&amp;#34;&lt;/span> :background &lt;span style="color:#e6db74">&amp;#34;#Ff82ab&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="org">Org&lt;/h2>
&lt;p>First need to set the org directory&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq org-directory &lt;span style="color:#e6db74">&amp;#34;~/org/&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="allow-encryption-in-org-files">Allow encryption in org files&lt;/h3>
&lt;p>This version has my email redacted&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (use-package! org-crypt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :after org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq! org-tags-exclude-from-inheritance &lt;span style="color:#f92672">&amp;#39;&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;crypt&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;read_only&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-crypt-key &lt;span style="color:#e6db74">&amp;#34;redacted&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-crypt-disable-auto-save &lt;span style="color:#e6db74">&amp;#34;ask&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (org-crypt-use-before-save-magic)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="read-only-sections">Read-only sections&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(defun unpackaged/org-next-heading-tagged (tag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Move to beginning of next heading tagged with TAG and return point, or return nil if none found.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (&lt;span style="color:#a6e22e">re-search-forward&lt;/span> (rx-to-string &lt;span style="color:#f92672">`&lt;/span>(seq bol (&lt;span style="color:#a6e22e">1+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>) (&lt;span style="color:#a6e22e">1+&lt;/span> blank) (optional (&lt;span style="color:#a6e22e">1+&lt;/span> not-newline) (&lt;span style="color:#a6e22e">1+&lt;/span> blank))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Beginning of tags&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Possible other tags&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (0+ (seq (&lt;span style="color:#a6e22e">1+&lt;/span> (not (any &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span> blank))) &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; The tag that matters&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">,&lt;/span>tag &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#39;noerror&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> (&lt;span style="color:#a6e22e">match-beginning&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun ap/org-remove-read-only ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Remove read-only text properties from Org entries tagged \&amp;#34;read_only\&amp;#34; in current buffer.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let ((inhibit-read-only &lt;span style="color:#66d9ef">t&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (org-with-wide-buffer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> (&lt;span style="color:#a6e22e">point-min&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (while (unpackaged/org-next-heading-tagged &lt;span style="color:#e6db74">&amp;#34;read_only&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">remove-text-properties&lt;/span> (&lt;span style="color:#a6e22e">point&lt;/span>) (progn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (org-end-of-subtree)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">point&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(read_only &lt;span style="color:#66d9ef">t&lt;/span>))))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(add-hook! &lt;span style="color:#e6db74">&amp;#39;org-mode-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>ap/org-mark-read-only)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ligatures">Ligatures&lt;/h3>
&lt;p>Some customizatons and additions&lt;/p>
&lt;h4 id="org">Org&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (appendq! +ligatures-extra-symbols
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(:title &lt;span style="color:#e6db74">&amp;#34;T&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :subtitle &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :author &lt;span style="color:#e6db74">&amp;#34;Ⓐ&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :property &lt;span style="color:#e6db74">&amp;#34;∹&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :name &lt;span style="color:#e6db74">&amp;#34;⒩&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :emptycheck &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :checkedbox &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :partialbox &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :email &lt;span style="color:#e6db74">&amp;#34;﫯&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (set-ligatures! &lt;span style="color:#e6db74">&amp;#39;org-mode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :merge &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :title &lt;span style="color:#e6db74">&amp;#34;#+TITLE:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :title &lt;span style="color:#e6db74">&amp;#34;#+title:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :subtitle &lt;span style="color:#e6db74">&amp;#34;#+SUBTITLE:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :subtitle &lt;span style="color:#e6db74">&amp;#34;#+subtitle:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :author &lt;span style="color:#e6db74">&amp;#34;#+AUTHOR:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :author &lt;span style="color:#e6db74">&amp;#34;#+author:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :property &lt;span style="color:#e6db74">&amp;#34;#+PROPERTY:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :property &lt;span style="color:#e6db74">&amp;#34;#+property:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :name &lt;span style="color:#e6db74">&amp;#34;#+NAME:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :name &lt;span style="color:#e6db74">&amp;#34;#+name:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :emptycheck &lt;span style="color:#e6db74">&amp;#34;[ ]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :checkedbox &lt;span style="color:#e6db74">&amp;#34;[X]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :partialbox &lt;span style="color:#e6db74">&amp;#34;[-]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :email &lt;span style="color:#e6db74">&amp;#34;#+email:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :email &lt;span style="color:#e6db74">&amp;#34;#+EMAIL:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="general">General&lt;/h4>
&lt;p>Fix some that don&amp;rsquo;t show up on Mac for some fucking reason.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(plist-put! +ligatures-extra-symbols
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :true &lt;span style="color:#e6db74">&amp;#34;⊨&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :false &lt;span style="color:#e6db74">&amp;#34;⊭&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :str &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :bool &lt;span style="color:#e6db74">&amp;#34;ℬ&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="templates">Templates&lt;/h3>
&lt;p>I&amp;rsquo;ve got my own templates I like to use.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(set-file-template! &lt;span style="color:#e6db74">&amp;#34;/\\(?:Sources/.*\\|README\\)\\.org$&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :trigger &lt;span style="color:#e6db74">&amp;#34;__head&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :mode &lt;span style="color:#e6db74">&amp;#39;org-mode&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="org-appear">Org Appear&lt;/h3>
&lt;p>This makes org things show when the point is near/in it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! org-appear)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! org-appear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :hook (org-mode &lt;span style="color:#f92672">.&lt;/span> org-appear-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq! org-appear-autoemphasis &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-appear-autosubmarkers &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-appear-autoentities &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-appear-autolinks &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="general-org-settings">General Org Settings&lt;/h3>
&lt;p>Hide the markers, inherit properties (I think that&amp;rsquo;s needed for the read-only/encryption one), add time to agenda done (not that I use it).
I forget what invisible-edits does.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-use-property-inheritance &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-log-done &lt;span style="color:#e6db74">&amp;#39;time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-catch-invisible-edits &lt;span style="color:#e6db74">&amp;#39;smart&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; org-export-with-sub-superscripts &amp;#39;{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-ellipsis &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-support-shift-select &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-hide-emphasis-markers &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-id-link-to-org-use-id &lt;span style="color:#e6db74">&amp;#39;create-if-interactive-and-no-custom-id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(add-hook! org-mode (electric-indent-local-mode &lt;span style="color:#ae81ff">-1&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(global-prettify-symbols-mode &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="org-reformat-buffer">Org reformat buffer&lt;/h3>
&lt;p>&lt;a href="https://github.com/zzamboni/dot-doom/blob/master/doom.org#visual-session-and-window-settings">https://github.com/zzamboni/dot-doom/blob/master/doom.org#visual-session-and-window-settings&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! org (defun zz/org-reformat-buffer ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (y-or-n-p &lt;span style="color:#e6db74">&amp;#34;Really format current buffer? &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let ((document (org-element-interpret-data (org-element-parse-buffer))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">erase-buffer&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">insert&lt;/span> document)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> (&lt;span style="color:#a6e22e">point-min&lt;/span>))))))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="disable-company-in-org">Disable Company in Org&lt;/h3>
&lt;p>It&amp;rsquo;s annoying&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (after! company (defun ved/org-mode-hook()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (featurep! :completion company)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">message&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Disabling company-mode while in org-capture...&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (company-mode &lt;span style="color:#ae81ff">-1&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (after! org (add-hook! org-capture-mode (ved/org-mode-hook)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="auto-tangle">Auto-Tangle&lt;/h3>
&lt;p>Save some effort. Requires you put a property, unless you set &lt;code>org-auto-tangle-default&lt;/code> to true. Otherwise use &lt;code>#+auto_tangle: t&lt;/code> at the top.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! org-auto-tangle)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! org-auto-tangle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>:defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>:hook (org-mode &lt;span style="color:#f92672">.&lt;/span> org-auto-tangle-mode))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="org-ui">ORG UI&lt;/h3>
&lt;p>Setting up org stuff to get it to look better I guess.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-hook! &lt;span style="color:#e6db74">&amp;#39;org-mode-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>mixed-pitch-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-hook! &lt;span style="color:#e6db74">&amp;#39;org-mode-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>solaire-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq mixed-pitch-variable-pitch-cursor &lt;span style="color:#66d9ef">nil&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(after! org-superstar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq org-superstar-prettify-item-bullets &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="more-prettify">More prettify&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! org (custom-set-faces!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-1 :weight extra-bold :height &lt;span style="color:#ae81ff">1.25&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-2 :weight bold :height &lt;span style="color:#ae81ff">1.15&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-3 :weight bold :height &lt;span style="color:#ae81ff">1.12&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-4 :weight semi-bold :height &lt;span style="color:#ae81ff">1.09&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-5 :weight semi-bold :height &lt;span style="color:#ae81ff">1.06&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-6 :weight semi-bold :height &lt;span style="color:#ae81ff">1.03&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-8 :weight semi-bold)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-9 :weight semi-bold)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(org-document-title :height &lt;span style="color:#ae81ff">1.2&lt;/span>)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="keybinds-evil-org-overrides">Keybinds Evil-org overrides&lt;/h3>
&lt;p>Just some annoying rebinds that I don&amp;rsquo;t want.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(map! :map evil-org-mode-map
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ei &lt;span style="color:#e6db74">&amp;#34;C-d&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>org-delete-char
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ie &lt;span style="color:#e6db74">&amp;#34;C-h&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>embark-help-command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="general-settings">General Settings&lt;/h2>
&lt;p>Set line numbers and some various things I like to have.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> display-line-numbers-type &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> history-delete-duplicates &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> elint-ignored-warnings &lt;span style="color:#f92672">&amp;#39;&lt;/span>(unbound-reference unbound-assignment)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ediff-split-window-function &lt;span style="color:#e6db74">&amp;#39;split-window-horizontally&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> show-paren-style &lt;span style="color:#e6db74">&amp;#39;mixed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> show-paren-when-point-in-periphery &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> show-paren-when-point-inside-paren &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> show-paren-delay &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kill-whole-line &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> evil-move-cursor-back &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> evil-kill-on-visual-paste &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> evil-visual-region-expanded &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> evil-want-fine-undo &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auto-save-default &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scroll-margin &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scroll-preserve-screen-position &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scroll-conservatively &lt;span style="color:#ae81ff">1337&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> indent-tabs-mode &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tab-width &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(blink-cursor-mode &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(setq display-time-24hr-format &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(display-time-mode &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="keybinds">Keybinds&lt;/h2>
&lt;h3 id="mac-keybindings">Mac Keybindings&lt;/h3>
&lt;ul>
&lt;li>Mac specific keybinds (set &lt;code>fn&lt;/code> key to &lt;code>hyper&lt;/code>)&lt;/li>
&lt;li>Also makes &lt;code>Super Left-Click&lt;/code> to &lt;code>Middle Click&lt;/code>&lt;/li>
&lt;li>&lt;code>Super&lt;/code> is &lt;code>Command&lt;/code> on Mac.&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(when IS-MAC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq! ns-function-modifier &lt;span style="color:#e6db74">&amp;#39;hyper&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">define-key&lt;/span> key-translation-map (kbd &lt;span style="color:#e6db74">&amp;#34;&amp;lt;s-mouse-1&amp;gt;&amp;#34;&lt;/span>) (kbd &lt;span style="color:#e6db74">&amp;#34;&amp;lt;mouse-2&amp;gt;&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="general-keybindings">General Keybindings&lt;/h3>
&lt;p>I hate some of the remaps, so this puts it to how I like it/used to it from generic emacs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(map!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gni &lt;span style="color:#e6db74">&amp;#34;C-k&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>kill-line
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-y&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>yank-from-kill-ring
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gniv &lt;span style="color:#e6db74">&amp;#34;C-e&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>doom/forward-to-last-non-comment-or-eol
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gniv &lt;span style="color:#e6db74">&amp;#34;C-a&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>doom/backward-to-bol-or-indent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :n &lt;span style="color:#e6db74">&amp;#34;U&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>undo-tree-visualize
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-U&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>undo-tree-visualize
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gni &lt;span style="color:#e6db74">&amp;#34;C-d&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;delete-char&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-SPC&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>set-mark-command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-v&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>scroll-up-command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-x C-f&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>find-file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-w&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>kill-region
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-x C-s&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>save-buffer)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>delete-char&lt;/code> doesn&amp;rsquo;t work in org-mode for some reason&amp;hellip; (as gei)&lt;/p>
&lt;h3 id="editing-shortcuts">Editing shortcuts&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(map!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gn &lt;span style="color:#e6db74">&amp;#34;H-l&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/loadlit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gn &lt;span style="color:#e6db74">&amp;#34;H-r&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/ffchez
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gn &lt;span style="color:#e6db74">&amp;#34;H-z&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/loadzshlit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gn &lt;span style="color:#e6db74">&amp;#34;H-m&amp;#34;&lt;/span> (cmd! (find-file (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;~/chezmoi/dotfiles/.chezmoi.toml.tmpl&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gn &lt;span style="color:#e6db74">&amp;#34;H-n&amp;#34;&lt;/span> (cmd! (doom-project-find-file &lt;span style="color:#e6db74">&amp;#34;~/chezmoi/dotfiles/dot_config/nvim/&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="whichkey">Whichkey&lt;/h3>
&lt;h4 id="general-settings">General Settings&lt;/h4>
&lt;ul>
&lt;li>First faster pop-up&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! which-key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq which-key-idle-delay &lt;span style="color:#ae81ff">0.5&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="customizations">Customizations&lt;/h4>
&lt;ul>
&lt;li>Remove redundant prefixes (stolen from &lt;a href="https://tecosaur.github.io/emacs-config/config.html#company">tecosaur&lt;/a>)&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq which-key-allow-multiple-replacements &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(after! which-key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (pushnew!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> which-key-replacement-alist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\\`+?evil[-:]?\\(?:a-\\)?\\(.*\\)&amp;#34;&lt;/span>) &lt;span style="color:#f92672">.&lt;/span> (&lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;◂\\1&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((&lt;span style="color:#e6db74">&amp;#34;\\`g s&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\\`evilem--?motion-\\(.*\\)&amp;#34;&lt;/span>) &lt;span style="color:#f92672">.&lt;/span> (&lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;◃\\1&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="file-modes">File Modes&lt;/h2>
&lt;h3 id="vim">VIM&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! vimrc-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! vimrc-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands vimrc-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="salt">Salt&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! salt-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! salt-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands salt-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="gitlab">Gitlab&lt;/h3>
&lt;p>For &lt;code>.gitlabci&lt;/code> file&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! gitlab-ci-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(package! gitlab-ci-mode-flycheck)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! gitlab-ci-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands gitlab-ci-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(use-package! gitlab-ci-mode-flycheck
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands gitlab-ci-mode-flycheck)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="puppet">Puppet&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! puppet-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! puppet-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands puppet-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="jenkinsfile">Jenkinsfile&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! groovy-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(package! jenkinsfile-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! jenkinsfile-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>:commands jenkinsfile-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(use-package! groovy-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>:commands groovy-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="smart-parens">Smart Parens&lt;/h2>
&lt;p>First thing is stop duplicates for quotes in vim, lisp, and org modes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! smartparens (sp-local-pair &lt;span style="color:#f92672">&amp;#39;&lt;/span>(lisp-mode org-mode) &lt;span style="color:#e6db74">&amp;#34;`&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;`&amp;#34;&lt;/span> :actions &lt;span style="color:#66d9ef">nil&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(after! smartparens (sp-local-pair &lt;span style="color:#f92672">&amp;#39;&lt;/span>(lisp-mode org-mode) &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span> :actions &lt;span style="color:#66d9ef">nil&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(after! smartparens (sp-local-pair &lt;span style="color:#f92672">&amp;#39;&lt;/span>(vimrc-mode) &lt;span style="color:#e6db74">&amp;#34;\&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\&amp;#34;&amp;#34;&lt;/span> :actions &lt;span style="color:#66d9ef">nil&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="bracket-newline">Bracket newline&lt;/h2>
&lt;p>Lets you put a newline and move the point when between brackets and such. Very helpful with things like HCL/Terraform.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(defun +ved/new-line-dwim ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let ((break-open-pair (or (and (looking-back &lt;span style="color:#e6db74">&amp;#34;{&amp;#34;&lt;/span>) (&lt;span style="color:#a6e22e">looking-at&lt;/span> &lt;span style="color:#e6db74">&amp;#34;}&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (and (looking-back &lt;span style="color:#e6db74">&amp;#34;&amp;gt;&amp;#34;&lt;/span>) (&lt;span style="color:#a6e22e">looking-at&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (and (looking-back &lt;span style="color:#e6db74">&amp;#34;(&amp;#34;&lt;/span>) (&lt;span style="color:#a6e22e">looking-at&lt;/span> &lt;span style="color:#e6db74">&amp;#34;)&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (and (looking-back &lt;span style="color:#e6db74">&amp;#34;\\[&amp;#34;&lt;/span>) (&lt;span style="color:#a6e22e">looking-at&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\\]&amp;#34;&lt;/span>)))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (newline)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when break-open-pair
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (save-excursion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (newline)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (indent-for-tab-command)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (indent-for-tab-command)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(map!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;M-RET&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/new-line-dwim)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="company">Company&lt;/h2>
&lt;p>Customizations for company&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! company-ispell :disable &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! company
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (set-company-backend! &lt;span style="color:#e6db74">&amp;#39;text-mode&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(:separate company-dabbrev company-yasnippet)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="company-box">Company Box&lt;/h3>
&lt;p>Make the box appear less quickly&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! company-box
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq! company-box-doc-delay &lt;span style="color:#ae81ff">2&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="frame-dimensions">Frame dimensions&lt;/h2>
&lt;p>See autoload.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(add-hook &lt;span style="color:#e6db74">&amp;#39;kill-emacs-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>my-save-frame-dimensions-h)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(my-restore-frame-dimensions-h)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;; autoload.el -*- lexical-binding: t; -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;;###autoload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defmacro unpackaged/def-org-maybe-surround (&lt;span style="color:#66d9ef">&amp;amp;rest&lt;/span> keys)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Define and bind interactive commands for each of KEYS that surround the region or insert text.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Commands are bound in &lt;/span>&lt;span style="color:#e6db74">`org-mode-map&amp;#39;&lt;/span>&lt;span style="color:#e6db74"> to each of KEYS. If the
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">region is active, commands surround it with the key character,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">otherwise call &lt;/span>&lt;span style="color:#e6db74">`org-self-insert-command&amp;#39;&lt;/span>&lt;span style="color:#e6db74">.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>(progn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">,@&lt;/span>(cl-loop for key in keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> for name &lt;span style="color:#a6e22e">=&lt;/span> (&lt;span style="color:#a6e22e">intern&lt;/span> (&lt;span style="color:#a6e22e">concat&lt;/span> &lt;span style="color:#e6db74">&amp;#34;unpackaged/org-maybe-surround-&amp;#34;&lt;/span> key))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> for docstring &lt;span style="color:#a6e22e">=&lt;/span> (&lt;span style="color:#a6e22e">format&lt;/span> &lt;span style="color:#e6db74">&amp;#34;If region is active, surround it with \&amp;#34;%s\&amp;#34;, otherwise call &lt;/span>&lt;span style="color:#e6db74">`org-self-insert-command&amp;#39;&lt;/span>&lt;span style="color:#e6db74">.&amp;#34;&lt;/span> key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> collect &lt;span style="color:#f92672">`&lt;/span>(defun &lt;span style="color:#f92672">,&lt;/span>name ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">,&lt;/span>docstring
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (if (region-active-p)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let ((beg (&lt;span style="color:#a6e22e">region-beginning&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (end (&lt;span style="color:#a6e22e">region-end&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (save-excursion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> end)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">insert&lt;/span> &lt;span style="color:#f92672">,&lt;/span>key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> beg)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">insert&lt;/span> &lt;span style="color:#f92672">,&lt;/span>key)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">call-interactively&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>org-self-insert-command)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> collect &lt;span style="color:#f92672">`&lt;/span>(&lt;span style="color:#a6e22e">define-key&lt;/span> org-mode-map (kbd &lt;span style="color:#f92672">,&lt;/span>key) &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>name))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;;###autoload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun ap/org-mark-read-only ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Mark all entries in the buffer tagged \&amp;#34;read_only\&amp;#34; with read-only text properties.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (org-with-wide-buffer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> (&lt;span style="color:#a6e22e">point-min&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (while (unpackaged/org-next-heading-tagged &lt;span style="color:#e6db74">&amp;#34;read_only&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">add-text-properties&lt;/span> (&lt;span style="color:#a6e22e">point&lt;/span>) (progn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (org-end-of-subtree)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">point&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(read_only &lt;span style="color:#66d9ef">t&lt;/span>)))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;;###autoload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun my-save-frame-dimensions-h ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Caches the current frame dimensions and position so we can
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> restore it when we launch emacs again.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (if-let ((main-frame (&lt;span style="color:#a6e22e">car-safe&lt;/span> (&lt;span style="color:#a6e22e">visible-frame-list&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (doom-store-put &lt;span style="color:#e6db74">&amp;#39;last-frame-size&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">list&lt;/span> (frame-position main-frame)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (frame-width main-frame)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (frame-height main-frame)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">frame-parameter&lt;/span> main-frame &lt;span style="color:#e6db74">&amp;#39;fullscreen&lt;/span>)))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;;###autoload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun my-restore-frame-dimensions-h ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (if-let (dims (doom-store-get &lt;span style="color:#e6db74">&amp;#39;last-frame-size&lt;/span> &lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (cl-destructuring-bind ((left &lt;span style="color:#f92672">.&lt;/span> top) width height fullscreen) dims
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq initial-frame-alist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">append&lt;/span> initial-frame-alist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>((left &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#f92672">,&lt;/span>left)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (top &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#f92672">,&lt;/span>top)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (width &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#f92672">,&lt;/span>width)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (height &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#f92672">,&lt;/span>height)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (fullscreen &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#f92672">,&lt;/span>fullscreen)))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-to-list &lt;span style="color:#e6db74">&amp;#39;default-frame-alist&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(height &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#ae81ff">52&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-to-list &lt;span style="color:#e6db74">&amp;#39;default-frame-alist&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(width &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#ae81ff">105&lt;/span>))))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="my-lisp">My Lisp&lt;/h2>
&lt;h3 id="timestamping">Timestamping&lt;/h3>
&lt;p>Creates a timestamp line and modifies it as appropriate.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(add-load-path! &lt;span style="color:#e6db74">&amp;#34;mylisps/&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(require &lt;span style="color:#e6db74">&amp;#39;ved-timestamping&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="projectile">Projectile&lt;/h2>
&lt;p>Should be disabled, but just in case make it not update.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! projectile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq projectile-auto-update-cache &lt;span style="color:#66d9ef">nil&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(setq projectile-project-root-files-bottom-up (remove
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;.git&amp;#34;&lt;/span> projectile-project-root-files-bottom-up)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dash">Dash&lt;/h2>
&lt;p>This is a document lookup tool for MacOS.&lt;/p>
&lt;h3 id="install-package-if-macos">Install package if MacOS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(when IS-MAC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(package! dash-at-point))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configure-if-mac">Configure if mac&lt;/h3>
&lt;ul>
&lt;li>TODO Figure out what hyper is on linux&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(when IS-MAC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (use-package! dash-at-point
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands (dash-at-point dash-at-point-with-docset))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-to-list &lt;span style="color:#e6db74">&amp;#39;dash-at-point-mode-alist&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(elisp-mode &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;elisp&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-to-list &lt;span style="color:#e6db74">&amp;#39;dash-at-point-mode-alist&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(nix-mode &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;nix&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-to-list &lt;span style="color:#e6db74">&amp;#39;dash-at-point-mode-alist&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(python-mode &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;py3&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (map!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gni &lt;span style="color:#e6db74">&amp;#34;H-d&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;dash-at-point&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gni &lt;span style="color:#e6db74">&amp;#34;H-p&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;dash-at-point-with-docset&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="unicode-font-stuff">Unicode Font Stuff&lt;/h2>
&lt;p>Not sure if this is helping, still have missing ligatures.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(unicode-fonts-setup)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="rainbow-delimeters-config">Rainbow Delimeters Config&lt;/h2>
&lt;p>Lua doesn&amp;rsquo;t have it for some reason, so we set it up.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(add-hook! &lt;span style="color:#e6db74">&amp;#39;lua-mode-hook&lt;/span> (rainbow-delimiters-mode))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="editorconfig">Editorconfig&lt;/h2>
&lt;h3 id="custom-major-modes">Custom major modes&lt;/h3>
&lt;p>Mostly for work but sometimes things need it (like &lt;code>.tmpl&lt;/code> for &lt;code>chezmoi&lt;/code>)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! editorconfig-custom-majormode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! editorconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (use-package! editorconfig-custom-majormode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config (add-hook! &lt;span style="color:#e6db74">&amp;#39;editorconfig-custom-hooks&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;editorconfig-custom-majormode&lt;/span>)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="programming-foo">Programming Foo&lt;/h2>
&lt;h3 id="lua">Lua&lt;/h3>
&lt;h4 id="lua-lsp-lsp">lua-lsp LSP&lt;/h4>
&lt;p>I have a script that installs it for NVIM so this is just pointing it toward seeing it. I dunno why the path it has is so jacked up but it is.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! lsp-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(setq! lsp-clients-lua-lsp-server-install-dir &lt;span style="color:#e6db74">&amp;#34;/Users/kailash/.asdf/shims/lua-lsp&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>ZSH Config</title><link>https://blog.evilolive.dev/configs/my-lit-zsh-config/zsh/</link><pubDate>Tue, 10 May 2022 18:40:00 -0600</pubDate><guid>https://blog.evilolive.dev/configs/my-lit-zsh-config/zsh/</guid><description>Goals Move things like exa/fd/etc&amp;hellip; to asdf and base this around that? Profiling Sometimes I wanna test it outside of just zinit&amp;rsquo;s stuff
# zmodload zsh/zprof P10K Instant Prompt Instant Prompt Currently disabled because of how I want to do my login thing. But zinit seems fast enough it&amp;rsquo;s fine. Enables Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc. Initialization code that may require console input (password prompts, [y/n] confirmations, etc.</description><content>&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Move things like exa/fd/etc&amp;hellip; to asdf and base this around that?&lt;/li>
&lt;/ul>
&lt;h2 id="profiling">Profiling&lt;/h2>
&lt;p>Sometimes I wanna test it outside of just zinit&amp;rsquo;s stuff&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># zmodload zsh/zprof&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="p10k-instant-prompt">P10K Instant Prompt&lt;/h2>
&lt;h3 id="ca9145">&lt;del>Instant Prompt&lt;/del>&lt;/h3>
&lt;p>&lt;strong>Currently disabled because of how I want to do my login thing. But zinit seems fast enough it&amp;rsquo;s fine.&lt;/strong>
Enables Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
Initialization code that may require console input (password prompts, [y/n]
confirmations, etc.) must go above this block; everything else may go below.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> -r &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>XDG_CACHE_HOME&lt;span style="color:#66d9ef">:-&lt;/span>$HOME/.cache&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/p10k-instant-prompt-&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>(%)&lt;span style="color:#66d9ef">:-&lt;/span>%n&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.zsh&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> source &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>XDG_CACHE_HOME&lt;span style="color:#66d9ef">:-&lt;/span>$HOME/.cache&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/p10k-instant-prompt-&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>(%)&lt;span style="color:#66d9ef">:-&lt;/span>%n&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.zsh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="zinit-bootstrap">ZINIT Bootstrap&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print -P &lt;span style="color:#e6db74">&amp;#34;%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> command mkdir -p &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$HOME&lt;span style="color:#e6db74">/.local/share/zinit&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> command chmod g-rwX &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$HOME&lt;span style="color:#e6db74">/.local/share/zinit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> command git clone https://github.com/zdharma-continuum/zinit &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$HOME&lt;span style="color:#e6db74">/.local/share/zinit/zinit.git&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> print -P &lt;span style="color:#e6db74">&amp;#34;%F{33} %F{34}Installation successful.%f%b&amp;#34;&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> print -P &lt;span style="color:#e6db74">&amp;#34;%F{160} The clone has failed.%f%b&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>source &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$HOME&lt;span style="color:#e6db74">/.local/share/zinit/zinit.git/zinit.zsh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>autoload -Uz compinit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>compinit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="zinit-module">Zinit Module&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#module_path+=( &amp;#34;/Users/kailash/.zinit/bin/zmodules/Src&amp;#34; )&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zmodload zdharma/zplugin&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="keybinds">Keybinds&lt;/h2>
&lt;p>First get my emacs style ones back.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit snippet OMZL::key-bindings.zsh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now let&amp;rsquo;s unfuck Atuin&amp;rsquo;s stuff&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>bindkey &lt;span style="color:#e6db74">&amp;#34;^[^[[C&amp;#34;&lt;/span> forward-word &lt;span style="color:#75715e"># alt+right to move forward one word&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bindkey &lt;span style="color:#e6db74">&amp;#34;^[^[[D&amp;#34;&lt;/span> backward-word &lt;span style="color:#75715e"># alt+left to move backward one word&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bindkey &lt;span style="color:#e6db74">&amp;#39;^[^?&amp;#39;&lt;/span> backward-kill-word &lt;span style="color:#75715e"># alt+delete to backward delete word&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="powerlevel10k">Powerlevel10K&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zinit ice depth&amp;#34;1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zinit light romkatv/powerlevel10k&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit depth&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> lucid nocd &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> romkatv/powerlevel10k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[[&lt;/span> ! -f ~/.p10k.zsh &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">||&lt;/span> source ~/.p10k.zsh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="popular-annexes">Popular Annexes&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit light-mode &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> zdharma-continuum/zinit-annex-as-monitor &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> zdharma-continuum/zinit-annex-bin-gem-node &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> zdharma-continuum/zinit-annex-patch-dl &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> zdharma-continuum/zinit-annex-submods &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> zdharma-continuum/zinit-annex-rust
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="iterm2">iTerm2&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TERM_PROGRAM&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;iTerm.app&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> test -e &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>HOME&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/.iterm2_shell_integration.zsh&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> source &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>HOME&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/.iterm2_shell_integration.zsh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="term-stuff">Term stuff&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice wait lucid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit snippet OMZP::term_tab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="stylua">Stylua&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># zinit ice lucid wait&amp;#39;1c&amp;#39; id-as&amp;#39;stylua-cargo&amp;#39; as&amp;#39;command&amp;#39; pick&amp;#39;bin/stylua&amp;#39; cargo&amp;#39;!stylua&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># zinit light zdharma-continuum/null&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="options">Options&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>setopt AUTO_MENU
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt AUTO_CD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt AUTO_PUSHD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt CDABLE_VARS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt PUSHD_IGNORE_DUPS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt BANG_HIST
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt COMPLETE_IN_WORD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt HIST_EXPIRE_DUPS_FIRST
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt HIST_FIND_NO_DUPS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt HIST_IGNORE_ALL_DUPS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt HIST_IGNORE_DUPS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt HIST_IGNORE_SPACE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt HIST_NO_FUNCTIONS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt HIST_REDUCE_BLANKS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt HIST_SAVE_NO_DUPS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt SHARE_HISTORY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt EXTENDED_HISTORY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt INC_APPEND_HISTORY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setopt APPEND_HISTORY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>COMPLETION_WAITING_DOTS&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unsetopt BEEP
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="completion-options">Completion options&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zstyle &lt;span style="color:#e6db74">&amp;#39;:completion:*&amp;#39;&lt;/span> menu &lt;span style="color:#66d9ef">select&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="aliases">Aliases&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>and .is_macos &lt;span style="color:#f92672">(&lt;/span>lookPath &lt;span style="color:#e6db74">&amp;#34;ggrep&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias grep&lt;span style="color:#f92672">={{&lt;/span> lookPath &lt;span style="color:#e6db74">&amp;#34;ggrep&amp;#34;&lt;/span> | quote &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias sgrep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/usr/bin/grep&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- &lt;span style="color:#66d9ef">if&lt;/span> lookPath &lt;span style="color:#e6db74">&amp;#34;dog&amp;#34;&lt;/span> &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias dig&lt;span style="color:#f92672">={{&lt;/span> lookPath &lt;span style="color:#e6db74">&amp;#34;dog&amp;#34;&lt;/span> | quote &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias sdig&lt;span style="color:#f92672">={{&lt;/span> lookPath &lt;span style="color:#e6db74">&amp;#34;dig&amp;#34;&lt;/span> | quote &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- &lt;span style="color:#66d9ef">if&lt;/span> lookPath &lt;span style="color:#e6db74">&amp;#34;fd&amp;#34;&lt;/span> &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias fd&lt;span style="color:#f92672">={{&lt;/span> cat &lt;span style="color:#f92672">(&lt;/span>lookPath &lt;span style="color:#e6db74">&amp;#34;fd&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#e6db74">&amp;#34;--hidden --color always&amp;#34;&lt;/span> | quote &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias ds&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;~/.emacs.d/bin/doom sync&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias ddr&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;~/.emacs.d/bin/doom doctor&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- &lt;span style="color:#66d9ef">if&lt;/span> lookPath &lt;span style="color:#e6db74">&amp;#34;nvim&amp;#34;&lt;/span> &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias vim&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;nvim&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias svim&lt;span style="color:#f92672">={{&lt;/span>- lookPath &lt;span style="color:#e6db74">&amp;#34;vim&amp;#34;&lt;/span> | quote &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- &lt;span style="color:#66d9ef">if&lt;/span> lookPath &lt;span style="color:#e6db74">&amp;#34;gsed&amp;#34;&lt;/span> &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias sed&lt;span style="color:#f92672">={{&lt;/span>- lookPath &lt;span style="color:#e6db74">&amp;#34;gsed&amp;#34;&lt;/span> | quote &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias ssed&lt;span style="color:#f92672">={{&lt;/span>- lookPath &lt;span style="color:#e6db74">&amp;#34;sed&amp;#34;&lt;/span> | quote &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="chezmoi">Chezmoi&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>alias cm&lt;span style="color:#f92672">={{&lt;/span> .chezmoi.executable | quote&lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias cma&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{{ .chezmoi.executable }} apply&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias cmp&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{{ .chezmoi.executable }} add&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias cms&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{{ .chezmoi.executable }} status&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias cme&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{{ .chezmoi.executable }} edit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias cmd&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{{ .chezmoi.executable }} diff&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="work">Work&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- &lt;span style="color:#66d9ef">if&lt;/span> .workmode &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias gerpom&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;git push origin HEAD:refs/for/master&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias updategerrit&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;git commit --amend --no-edit &amp;amp;&amp;amp; gerpom&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias cbblr&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/usr/bin/ssh cobbler&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pretty-things">Pretty things&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>boxenfortune&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fortune -a futurama | lolcat -t | boxen --padding .5 --center --border-color&lt;span style="color:#f92672">=&lt;/span>blue --background-color&lt;span style="color:#f92672">=&lt;/span>black --border-style&lt;span style="color:#f92672">=&lt;/span>doubleSingle --align&lt;span style="color:#f92672">=&lt;/span>center
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>boxenpony&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>frypic&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;bestest_fry.pony&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zoidberg&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;zoidberg.pony&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bender&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;bender.pony&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>imgchoices&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>frypic&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>zoidberg&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>bender&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> typeset PONYSAY_TRUNCATE_HEIGHT&lt;span style="color:#f92672">=&lt;/span>y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> typeset PONYSAY_TRUNCATE_WIDTH&lt;span style="color:#f92672">=&lt;/span>y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ponysay -o -f &lt;span style="color:#e6db74">${&lt;/span>HOME&lt;span style="color:#e6db74">}&lt;/span>/chezmoi/misc/&lt;span style="color:#66d9ef">$(&lt;/span>shuf -e -n &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>imgchoices&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span> | boxen --center --align&lt;span style="color:#f92672">=&lt;/span>center --dim-border --border-style&lt;span style="color:#f92672">=&lt;/span>doubleSingle --margin&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> --padding&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> --border-color&lt;span style="color:#f92672">=&lt;/span>magenta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>forpony&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Print a random, hopefully interesting, adage.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> $+commands&lt;span style="color:#f92672">[&lt;/span>fortune&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> $+commands&lt;span style="color:#f92672">[&lt;/span>boxen&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> $+commands&lt;span style="color:#f92672">[&lt;/span>ponysay&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># fortune futurama | cowsay -f vader-koala -W 72 | lolcat -F 0.75&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># fortune futurama | ponysay -bunicode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># fortune futurama | pokemonsay&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> boxenfortune
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> boxenpony
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Get to installing fortune, boxen, and ponysay dammit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>boxenascii&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> susfry&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fry.ascii&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoidberg&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;zoidberg.ascii&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bender&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;bender.ascii&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> imgchoices&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>susfry&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>zoidberg&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>bender&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cat &lt;span style="color:#e6db74">${&lt;/span>HOME&lt;span style="color:#e6db74">}&lt;/span>/chezmoi/misc/&lt;span style="color:#66d9ef">$(&lt;/span>shuf -e -n &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>imgchoices&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span> | boxen --center --align&lt;span style="color:#f92672">=&lt;/span>center --dim-border --border-style&lt;span style="color:#f92672">=&lt;/span>doubleSingle --margin&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> --padding&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> --border-color&lt;span style="color:#f92672">=&lt;/span>magenta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="source-scripts">Source scripts&lt;/h2>
&lt;h3 id="conda">Conda &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->work&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>eq .chezmoi.hostname &lt;span style="color:#e6db74">&amp;#34;bburks-mbp&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;gt;&amp;gt;&amp;gt; conda initialize &amp;gt;&amp;gt;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># !! Contents within this block are managed by &amp;#39;conda init&amp;#39; !!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>__conda_setup&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>CONDA_REPORT_ERRORS&lt;span style="color:#f92672">=&lt;/span>false &lt;span style="color:#e6db74">&amp;#39;/Users/bburks/opt/miniconda3/bin/conda&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;shell.zsh&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;hook&amp;#39;&lt;/span> 2&amp;gt; /dev/null&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $? -eq &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eval &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$__conda_setup&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -f &lt;span style="color:#e6db74">&amp;#34;/Users/bburks/opt/miniconda3/etc/profile.d/conda.sh&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> . &lt;span style="color:#e6db74">&amp;#34;/Users/bburks/opt/miniconda3/etc/profile.d/conda.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#export PATH=&amp;#34;/Users/bburks/opt/miniconda3/bin:$PATH&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export PATH&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$PATH&lt;span style="color:#e6db74">:/Users/bburks/opt/minicoda3/bin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unset __conda_setup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;lt;&amp;lt;&amp;lt; conda initialize &amp;lt;&amp;lt;&amp;lt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export DEFAULT_CONDA_ENV&lt;span style="color:#f92672">=&lt;/span>spotx_release_python3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="cargo">Cargo&lt;/h3>
&lt;p>This script puts it in the path, so not needed to add it manually.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -f $HOME/.cargo/env &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> source $HOME/.cargo/env
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="google-sdk">Google SDK&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># The next line updates PATH for the Google Cloud SDK.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -f &lt;span style="color:#e6db74">&amp;#39;{{ .gcloudsdk }}/path.zsh.inc&amp;#39;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span> . &lt;span style="color:#e6db74">&amp;#39;{{ .gcloudsdk }}/path.zsh.inc&amp;#39;&lt;/span>; &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># The next line enables shell command completion for gcloud.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -f &lt;span style="color:#e6db74">&amp;#39;{{ .gcloudsdk }}/completion.zsh.inc&amp;#39;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span> . &lt;span style="color:#e6db74">&amp;#39;{{ .gcloudsdk }}/completion.zsh.inc&amp;#39;&lt;/span>; &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="misc">Misc&lt;/h2>
&lt;h3 id="autoload-complete">Autoload/Complete&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>autoload -U +X bashcompinit &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> bashcompinit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>lookPath &lt;span style="color:#e6db74">&amp;#34;terraform&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> -&lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>complete -o nospace -C &lt;span style="color:#f92672">{{&lt;/span> lookPath &lt;span style="color:#e6db74">&amp;#34;terraform&amp;#34;&lt;/span> &lt;span style="color:#f92672">}}&lt;/span> terraform
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>lookPath &lt;span style="color:#e6db74">&amp;#34;vault&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> -&lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>complete -o nospace -C &lt;span style="color:#f92672">{{&lt;/span> lookPath &lt;span style="color:#e6db74">&amp;#34;vault&amp;#34;&lt;/span> &lt;span style="color:#f92672">}}&lt;/span> vault
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="mcfly">McFly&lt;/h3>
&lt;p>Install. The config options are in zshenv which I need to move here.
This is the original way. Not using it in favor of switching to proper cargo and/or asdf&lt;/p>
&lt;h4 id="deprecated">Deprecated&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice lucid wait&lt;span style="color:#e6db74">&amp;#34;0a&amp;#34;&lt;/span> from&lt;span style="color:#e6db74">&amp;#34;gh-r&amp;#34;&lt;/span> as&lt;span style="color:#e6db74">&amp;#34;program&amp;#34;&lt;/span> atload&lt;span style="color:#e6db74">&amp;#39;eval &amp;#34;$(mcfly init zsh)&amp;#34;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light cantino/mcfly
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="current">Current&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">((&lt;/span> $+commands&lt;span style="color:#f92672">[&lt;/span>mcfly&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">))&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eval &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>mcfly init zsh&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fzf">FZF&lt;/h2>
&lt;p>First install it&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice from&lt;span style="color:#e6db74">&amp;#34;gh-r&amp;#34;&lt;/span> as&lt;span style="color:#e6db74">&amp;#34;completion&amp;#34;&lt;/span>; zinit light junegunn/fzf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="now-activate-it">Now activate it&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span> -f ~/.fzf.zsh &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> source ~/.fzf.zsh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="fzf-tabs">FZF Tabs&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zinit ice wait&amp;#39;2&amp;#39; lucid blockf compile&amp;#39;lib/*f*~*.zwc&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zinit light Aloxaf/fzf-tab&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="fzf-tab-settings-completion">FZF Tab Settings/Completion&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>autoload -Uz zstyle+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># disable sort when completing `git checkout`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zstyle &lt;span style="color:#e6db74">&amp;#39;:completion:*:git-checkout:*&amp;#39;&lt;/span> sort false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># set descriptions format to enable group support&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zstyle &lt;span style="color:#e6db74">&amp;#39;:completion:*:descriptions&amp;#39;&lt;/span> format &lt;span style="color:#e6db74">&amp;#39;[%d]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># set list-colors to enable filename colorizing&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zstyle &lt;span style="color:#e6db74">&amp;#39;:completion:*&amp;#39;&lt;/span> list-colors &lt;span style="color:#e6db74">${&lt;/span>(s.:.)LS_COLORS&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># preview directory&amp;#39;s content with exa when completing cd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zstyle &amp;#39;:fzf-tab:complete:cd:*&amp;#39; fzf-preview &amp;#39;exa -1 --color=always $realpath&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zstyle &lt;span style="color:#e6db74">&amp;#39;:completion:*:*:cd:*:directory stack&amp;#39;&lt;/span> menu yes &lt;span style="color:#66d9ef">select&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># switch group using `,` and `.`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zstyle &amp;#39;:fzf-tab:*&amp;#39; switch-group &amp;#39;,&amp;#39; &amp;#39;.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zstyle+ &lt;span style="color:#e6db74">&amp;#39;:completion:*&amp;#39;&lt;/span> list-separator &lt;span style="color:#e6db74">&amp;#39;→&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> completer _complete _match _list _prefix _ignored _correct _approximate _oldlist &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> group-name &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> use-cache on &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> verbose yes &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> rehash true &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> squeeze-slashes true &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> accept-exact &lt;span style="color:#e6db74">&amp;#39;*(N)&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> ignore-parents parent pwd &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> matcher-list &lt;span style="color:#e6db74">&amp;#39;m:{a-zA-Z}={A-Za-z}&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;r:|[._-]=* r:|=*&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;l:|=* r:|=*&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:manuals&amp;#39;&lt;/span> separate-sections true &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:matches&amp;#39;&lt;/span> group &lt;span style="color:#e6db74">&amp;#39;yes&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:functions&amp;#39;&lt;/span> ignored-patterns &lt;span style="color:#e6db74">&amp;#39;(_*|pre(cmd|exec))&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:approximate:*&amp;#39;&lt;/span> max-errors &lt;span style="color:#ae81ff">1&lt;/span> numeric &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:match:*&amp;#39;&lt;/span> original only &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:messages&amp;#39;&lt;/span> format &lt;span style="color:#e6db74">&amp;#39; %F{purple} -- %d --%f&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:warnings&amp;#39;&lt;/span> format &lt;span style="color:#e6db74">&amp;#39; %F{1}-- no matches found --%f&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:corrections&amp;#39;&lt;/span> format &lt;span style="color:#e6db74">&amp;#39;%F{5}!- %d (errors: %e) -!%f&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:default&amp;#39;&lt;/span> list-prompt &lt;span style="color:#e6db74">&amp;#39;%S%M matches%s&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:descriptions&amp;#39;&lt;/span> format &lt;span style="color:#e6db74">&amp;#39;[%d]&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:options&amp;#39;&lt;/span> description yes &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:-tilde-:*&amp;#39;&lt;/span> group-order named-directories path-directories users expand &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:cd:*&amp;#39;&lt;/span> tag-order local-directories directory-stack path-directories &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:cd:*&amp;#39;&lt;/span> group-order local-directories path-directories &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:git-checkout:*&amp;#39;&lt;/span> sort false &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:exa&amp;#39;&lt;/span> file-sort modification &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:exa&amp;#39;&lt;/span> sort false &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:sudo:*&amp;#39;&lt;/span> command-path /usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:sudo::&amp;#39;&lt;/span> environ PATH&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:*:zcompile:*&amp;#39;&lt;/span> ignored-patterns &lt;span style="color:#e6db74">&amp;#39;(*~|*.zwc)&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:(rm|rip|kill|diff|git-dsf):*&amp;#39;&lt;/span> ignore-line other &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:(rm|rip|git-dsf):*&amp;#39;&lt;/span> file-patterns &lt;span style="color:#e6db74">&amp;#39;*:all-files&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:complete:-command-::commands&amp;#39;&lt;/span> ignored-patterns &lt;span style="color:#e6db74">&amp;#39;*\~&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:*:-subscript-:*&amp;#39;&lt;/span> tag-order indexes parameters &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> + &lt;span style="color:#e6db74">&amp;#39;:*:-redirect-,2&amp;gt;,*:*&amp;#39;&lt;/span> file-patterns &lt;span style="color:#e6db74">&amp;#39;*.log&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="fzf-specific-options">FZF Specific options&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>export FZF_COMPLETION_OPTS&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;--filepath-word --height 40% --layout=reverse --color &amp;#39;fg:#bbccdd,fg+:#ddeeff,bg:#334455,preview-bg:#223344,border:#778899&amp;#39; --border --info=inline --ansi&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="fzf-use-fd-for-find">FZF use FD for find&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>export FZF_DEFAULT_COMMAND&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;fd --hidden&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The following sets it up to go on the base paths&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>_fzf_compgen_path&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fd --follow --one-file-system --hidden --exclude &lt;span style="color:#e6db74">&amp;#34;.git&amp;#34;&lt;/span> . &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$1&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Use fd to generate the list for directory completion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>_fzf_compgen_dir&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fd --type d --follow --one-file-system --hidden --exclude &lt;span style="color:#e6db74">&amp;#34;.git&amp;#34;&lt;/span> . &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$1&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="omz-plugins">OMZ Plugins&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice wait lucid &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> OMZL::completion.zsh &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> OMZL::termsupport.zsh &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> OMZL::history.zsh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit wait&lt;span style="color:#e6db74">&amp;#39;0b&amp;#39;&lt;/span> lucid &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> OMZP::helm &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> OMZP::oc &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> OMZP::kubectl &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> OMZP::minikube &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> OMZP::fasd &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> OMZP::git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">((&lt;/span> $+commands&lt;span style="color:#f92672">[&lt;/span>thefuck&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">))&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zinit snippet OMZP::thefuck
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="exa">EXA&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice wait&lt;span style="color:#e6db74">&amp;#39;0c&amp;#39;&lt;/span> lucid id-as&lt;span style="color:#e6db74">&amp;#39;exa&amp;#39;&lt;/span> from&lt;span style="color:#e6db74">&amp;#39;github&amp;#39;&lt;/span> as&lt;span style="color:#e6db74">&amp;#39;completion&amp;#39;&lt;/span> cp&lt;span style="color:#e6db74">&amp;#39;completions/zsh/_exa -&amp;gt; _exa&amp;#39;&lt;/span> depth&lt;span style="color:#e6db74">&amp;#39;1&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> atload&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> alias ls=&amp;#39;exa -a --icons -F --time-style long-iso --git --color=auto&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> alias l=&amp;#39;exa --sort=changed --icons -la --git --git-ignore --ignore-glob=\&amp;#34;.DS_Store|__MACOSX|__pycache__\&amp;#34;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> alias la=&amp;#39;exa --group-directories-first --icons -la&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> alias ll=&amp;#39;exa --group-directories-first --icons -la --color-scale --time-style=long-iso --git --git-ignore --ignore-glob=\&amp;#34;.git|.DS_Store|__MACOSX|__pycache__\&amp;#34; -T -L2&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> alias ll3=&amp;#39;exa --group-directories-first --icons -la --git --git-ignore --ignore-glob=\&amp;#34;.git|.DS_Store|__MACOSX\&amp;#34; -T -L3&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> alias ll4=&amp;#39;exa --group-directories-first --icons -la --git --git-ignore --ignore-glob=\&amp;#34;.git|.DS_Store|__MACOSX\&amp;#34; -T -L4&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> alias tree=&amp;#39;exa --group-directories-first -T --icons&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light ogham/exa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="bat">Bat&lt;/h2>
&lt;p>&lt;a href="https://github.com/sharkdp/bat">https://github.com/sharkdp/bat&lt;/a>&lt;/p>
&lt;h3 id="install">Install&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice lucid as&lt;span style="color:#e6db74">&amp;#39;completion&amp;#39;&lt;/span> id-as&lt;span style="color:#e6db74">&amp;#39;bat&amp;#39;&lt;/span> from&lt;span style="color:#e6db74">&amp;#39;gh-r&amp;#39;&lt;/span> cp&lt;span style="color:#e6db74">&amp;#39;bat/autocomplete/bat.zsh -&amp;gt; _bat&amp;#39;&lt;/span> atload&lt;span style="color:#e6db74">&amp;#39;alias cat=bat;alias scat=/bin/cat&amp;#39;&lt;/span> wait
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light sharkdp/bat
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="use-with-man">Use with man&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>export MANPAGER&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sh -c &amp;#39;col -bx | bat -l man -p&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># MANROFFOPT=&amp;#34;-c&amp;#34; if formatted weird&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ripgrep">Ripgrep&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zinit ice lucid wait from&amp;#39;gh-r&amp;#39; as&amp;#39;completion&amp;#39; id-as&amp;#39;rg&amp;#39; cp&amp;#39;rg/complete/_rg -&amp;gt; _rg&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zinit light BurntSushi/ripgrep&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fd">FD&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit as&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;null&amp;#34;&lt;/span> lucid from&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;gh-r&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> mv&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fd* -&amp;gt; fd&amp;#34;&lt;/span> sbin&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fd/fd&amp;#34;&lt;/span> @sharkdp/fd &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> cp&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ripgrep*/complete/_rg -&amp;gt; _rg&amp;#34;&lt;/span> sbin&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ripgrep* -&amp;gt; rg&amp;#34;&lt;/span> @BurntSushi/ripgrep
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="straight-method">Straight method&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice as&lt;span style="color:#e6db74">&amp;#39;program&amp;#39;&lt;/span> id-as&lt;span style="color:#e6db74">&amp;#39;fd&amp;#39;&lt;/span> from&lt;span style="color:#e6db74">&amp;#39;gh-r&amp;#39;&lt;/span> mv&lt;span style="color:#e6db74">&amp;#39;fd* -&amp;gt; fd&amp;#39;&lt;/span> lucid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light sharkdp/fd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="cargo-method">Cargo method&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit wait&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;[[ -v CARGO_HOME &amp;amp;&amp;amp; -v RUSTUP_HOME ]]&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> id-as&lt;span style="color:#e6db74">&amp;#39;rust-fd&amp;#39;&lt;/span> cargo&lt;span style="color:#e6db74">&amp;#39;!fd-find&amp;#39;&lt;/span> lucid&lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> zdharma-continuum/null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="direnv">Direnv&lt;/h2>
&lt;p>This broke for some reason, so doing it the old way&lt;/p>
&lt;h3 id="broken">Broken&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zinit from&amp;#34;gh-r&amp;#34; as&amp;#34;completion&amp;#34; mv&amp;#34;direnv* -&amp;gt; direnv&amp;#34; \&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># atclone&amp;#39;./direnv hook zsh &amp;gt; zhook.zsh&amp;#39; atpull&amp;#39;%atclone&amp;#39; \&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># pick&amp;#34;direnv&amp;#34; src=&amp;#34;zhook.zsh&amp;#34; for \&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># direnv/direnv&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="working">Working&lt;/h3>
&lt;p>Requires installed via brew or something&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>eval &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>direnv hook zsh&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="misc-macos">Misc MacOS&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- &lt;span style="color:#66d9ef">if&lt;/span> .is_macos &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit ice lucid svn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit snippet OMZP::macos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit ice lucid wait as&lt;span style="color:#e6db74">&amp;#39;completion&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit snippet OMZP::brew
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="zsh-autopair">ZSH Autopair&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice wait&lt;span style="color:#e6db74">&amp;#39;3&amp;#39;&lt;/span> lucid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light hlissner/zsh-autopair
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pip">PIP&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice wait&lt;span style="color:#e6db74">&amp;#39;2&amp;#39;&lt;/span> lucid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit snippet OMZP::pip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit ice as&lt;span style="color:#e6db74">&amp;#39;completion&amp;#39;&lt;/span>; zinit snippet OMZP::pip/_pip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="atuin">Atuin&lt;/h2>
&lt;p>Install by running &lt;code>bash &amp;lt;(curl https://raw.githubusercontent.com/ellie/atuin/main/install.sh)&lt;/code> and then &lt;code>atuin import auto&lt;/code>. Make sure to link the config first.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># zinit ice wait&amp;#39;3&amp;#39; depth&amp;#39;1&amp;#39; lucid&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># zinit light ellie/atuin&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="function-to-tangle-from-cli">Function to Tangle from CLI&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> tangle-file&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> emacs --batch -l org $@ -f org-babel-tangle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="asdf">ASDF&lt;/h2>
&lt;p>Decided to stop installing it, thought it might be causing issues? So just switched to native install. Shims on shims probably isn&amp;rsquo;t good. But this doesn&amp;rsquo;t actually seem to do anything either.
This is now installed via git for all OS&amp;rsquo;s to keep the path work sane&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># zinit ice ver&amp;#39;v0.9.0&amp;#39; src&amp;#39;asdf.sh&amp;#39; mv&amp;#39;_asdf -&amp;gt; _asdf&amp;#39; nocompile&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zinit ice ver&amp;#39;v0.9.0&amp;#39; pick&amp;#39;asdf.sh&amp;#39; fpath&amp;#39;completions&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zinit light asdf-vm/asdf&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># zinit ice wait&amp;#39;3&amp;#39; lucid&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#source $(brew --prefix asdf)/libexec/asdf.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- &lt;span style="color:#66d9ef">if&lt;/span> not .chez.caelus &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[[&lt;/span> -f &lt;span style="color:#e6db74">${&lt;/span>HOME&lt;span style="color:#e6db74">}&lt;/span>/.asdf/asdf.sh &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> . &lt;span style="color:#e6db74">${&lt;/span>HOME&lt;span style="color:#e6db74">}&lt;/span>/.asdf/asdf.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> .chez.caelus -&lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[[&lt;/span> -f &lt;span style="color:#66d9ef">$(&lt;/span>brew --prefix asdf&lt;span style="color:#66d9ef">)&lt;/span>/libexec/asdf.sh &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> source &lt;span style="color:#66d9ef">$(&lt;/span>brew --prefix asdf&lt;span style="color:#66d9ef">)&lt;/span>/libexec/asdf.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit ice as&lt;span style="color:#e6db74">&amp;#39;completion&amp;#39;&lt;/span> lucid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit snippet OMZP::asdf/asdf.plugin.zsh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="haskell">Haskell&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span> -f &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$HOME&lt;span style="color:#e6db74">/.ghcup/env&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> source &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$HOME&lt;span style="color:#e6db74">/.ghcup/env&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nix">Nix&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span> -f $HOME/.nix-profile/etc/profile.d/hm-session-vars.sh &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> source $HOME/.nix-profile/etc/profile.d/hm-session-vars.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="salt">Salt&lt;/h2>
&lt;p>Completion&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice as&lt;span style="color:#e6db74">&amp;#39;completion&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit snippet OMZP::salt/_salt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="forgit">Forgit&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice wait lucid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light &lt;span style="color:#e6db74">&amp;#39;wfxr/forgit&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="command-not-found">Command-not-found&lt;/h2>
&lt;p>Suggests things if you don&amp;rsquo;t have it installed. But does need a helper. On macOS it&amp;rsquo;s &lt;code>brew tap homebrew/command-not-found&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit snippet OMZP::command-not-found
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ssh">SSH&lt;/h2>
&lt;p>Sets up the agent, hopefully unfucking the macos stuff&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice wait&lt;span style="color:#e6db74">&amp;#39;0c&amp;#39;&lt;/span> lucid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit snippet OMZP::ssh-agent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zinit snippet PZTM::ssh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mykeyids&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id_ed25519&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#66d9ef">$(&lt;/span>hostname -s&lt;span style="color:#66d9ef">)&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;bburks-mbp&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keyids&lt;span style="color:#f92672">+=(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;magnite-github&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;id_ecdsa_sk&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;caelus&amp;#34;&lt;/span>|&lt;span style="color:#e6db74">&amp;#34;coeus&amp;#34;&lt;/span>|&lt;span style="color:#e6db74">&amp;#34;frontiere&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> -f &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>HOME&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/.ssh/vault-signed.pub&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> keyids&lt;span style="color:#f92672">+=(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;vault-signed.pub&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> akey in &lt;span style="color:#e6db74">${&lt;/span>mykeyids&lt;span style="color:#e6db74">}&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mykeypaths&lt;span style="color:#f92672">+=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>HOME&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/.ssh/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>akey&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zstyle &lt;span style="color:#e6db74">&amp;#39;:omz:plugins:ssh-agent&amp;#39;&lt;/span> identities &lt;span style="color:#e6db74">${&lt;/span>mykeyids&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="zoxide">zoxide&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice wait&lt;span style="color:#e6db74">&amp;#34;0a&amp;#34;&lt;/span> as&lt;span style="color:#e6db74">&amp;#34;command&amp;#34;&lt;/span> from&lt;span style="color:#e6db74">&amp;#34;gh-r&amp;#34;&lt;/span> lucid &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> atclone&lt;span style="color:#e6db74">&amp;#34;./zoxide init zsh &amp;gt; init.zsh&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> atpull&lt;span style="color:#e6db74">&amp;#34;%atclone&amp;#34;&lt;/span> src&lt;span style="color:#e6db74">&amp;#34;init.zsh&amp;#34;&lt;/span> sbin&lt;span style="color:#e6db74">&amp;#39;zoxide!&amp;#39;&lt;/span> nocompile&lt;span style="color:#e6db74">&amp;#39;!&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light ajeetdsouza/zoxide
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># zinit ice wait&amp;#39;3c&amp;#39; lucid&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># zinit snippet OMZP::zoxide&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="chezmoi-completion">chezmoi completion&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice as&lt;span style="color:#e6db74">&amp;#34;completion&amp;#34;&lt;/span> from&lt;span style="color:#e6db74">&amp;#34;gh-r&amp;#34;&lt;/span> id-as&lt;span style="color:#e6db74">&amp;#34;chezmoi&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> mv&lt;span style="color:#e6db74">&amp;#34;completions/chezmoi.zsh -&amp;gt; _chezmoi&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> pick&lt;span style="color:#e6db74">&amp;#34;_chezmoi&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> atpull&lt;span style="color:#e6db74">&amp;#34;!git reset --hard&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light twpayne/chezmoi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># chezmoi completion zsh --output=$HOME/.local/share/zinit/completions/_chezmoi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="sops">SOPS&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice wait&lt;span style="color:#e6db74">&amp;#39;1a&amp;#39;&lt;/span> from&lt;span style="color:#e6db74">&amp;#34;gh-r&amp;#34;&lt;/span> as&lt;span style="color:#e6db74">&amp;#34;completion&amp;#34;&lt;/span> sbin&lt;span style="color:#e6db74">&amp;#34;sops* -&amp;gt; sops&amp;#34;&lt;/span> bpick&lt;span style="color:#e6db74">&amp;#34;*.{{.chezmoi.os}}&amp;#34;&lt;/span> nocompile lucid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light mozilla/sops
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#zinit ice lucid from&amp;#34;gh-r&amp;#34; as&amp;#39;completion&amp;#39;; zinit light mozilla/sops&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="tmux">Tmux&lt;/h2>
&lt;p>Now for the generic install/settings. But we&amp;rsquo;ll skip it if no tmux.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- &lt;span style="color:#66d9ef">if&lt;/span> lookPath &lt;span style="color:#e6db74">&amp;#34;tmux&amp;#34;&lt;/span> &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit ice lucid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit snippet OMZP::tmux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ubuntu">Ubuntu&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- &lt;span style="color:#66d9ef">if&lt;/span> hasKey .chezmoi.osRelease &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span> -&lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- &lt;span style="color:#66d9ef">if&lt;/span> eq .chezmoi.osRelease.id &lt;span style="color:#e6db74">&amp;#34;ubuntu&amp;#34;&lt;/span> &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit ice wait&lt;span style="color:#e6db74">&amp;#39;0c&amp;#39;&lt;/span> lucid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit snippet OMZP::ubuntu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{{&lt;/span>- end &lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="path-changes">Path Changes&lt;/h2>
&lt;h3 id="local-bin-in-home">Local bin in home&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[[&lt;/span> -d &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>HOME&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/.local/bin&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> export PATH&lt;span style="color:#f92672">=&lt;/span>$PATH:$HOME/.local/bin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="lua-language-server">lua-language-server&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[[&lt;/span> -d &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>HOME&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/.local/share/tools/lua-language-server/darwin/bin/lua-language-server&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> export PATH&lt;span style="color:#f92672">=&lt;/span>$PATH:$HOME/.local/share/tools/lua-language-server/darwin/bin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="lazygit">Lazygit&lt;/h2>
&lt;p>Looks neat&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice lucid wait&lt;span style="color:#e6db74">&amp;#39;0b&amp;#39;&lt;/span> as&lt;span style="color:#e6db74">&amp;#39;null&amp;#39;&lt;/span> from&lt;span style="color:#e6db74">&amp;#39;gh-r&amp;#39;&lt;/span> sbin&lt;span style="color:#e6db74">&amp;#39;lazygit&amp;#39;&lt;/span> atload&lt;span style="color:#e6db74">&amp;#39;alias lg=lazygit&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light &lt;span style="color:#e6db74">&amp;#39;jesseduffield/lazygit&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dog">Dog&lt;/h2>
&lt;p>Great DNS tool&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice wait&lt;span style="color:#e6db74">&amp;#34;0a&amp;#34;&lt;/span> from&lt;span style="color:#e6db74">&amp;#34;gh-r&amp;#34;&lt;/span> as&lt;span style="color:#e6db74">&amp;#34;null&amp;#34;&lt;/span> sbin&lt;span style="color:#e6db74">&amp;#34;bin/dog&amp;#34;&lt;/span> mv&lt;span style="color:#e6db74">&amp;#39;completions/dog.zsh -&amp;gt; _dog&amp;#39;&lt;/span> lucid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light ogham/dog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="kitty">Kitty&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">((&lt;/span>$+commands&lt;span style="color:#f92672">[&lt;/span>kitty&lt;span style="color:#f92672">]))&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># zinit ice lucid&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit ice id-as&lt;span style="color:#e6db74">&amp;#39;kitty&amp;#39;&lt;/span> cp&lt;span style="color:#e6db74">&amp;#39;functions/_kitty_complete -&amp;gt; _kitty&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light redxtech/zsh-kitty
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> test -n &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$KITTY_INSTALLATION_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export KITTY_SHELL_INTEGRATION&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;no-cursor&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> autoload -Uz -- &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$KITTY_INSTALLATION_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>/shell-integration/zsh/kitty-integration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kitty-integration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unfunction kitty-integration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> ! -z &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>KITTY_WINDOW_ID&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kitty + complete setup zsh | source /dev/stdin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pet">Pet&lt;/h2>
&lt;p>CLI snippets&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice lucid as&lt;span style="color:#e6db74">&amp;#34;null&amp;#34;&lt;/span> from&lt;span style="color:#e6db74">&amp;#34;gh-r&amp;#34;&lt;/span> sbin&lt;span style="color:#e6db74">&amp;#34;pet&amp;#34;&lt;/span> mv&lt;span style="color:#e6db74">&amp;#34;misc/completions/zsh/_pet -&amp;gt; _pet&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light knqyf263/pet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="poetry-completions">Poetry Completions&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice lucid pick&lt;span style="color:#e6db74">&amp;#39;poetry.zsh&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit light sudosubin/zsh-poetry
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="completions">Completions&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zinit ice wait&lt;span style="color:#e6db74">&amp;#39;0b&amp;#39;&lt;/span> lucid depth&lt;span style="color:#f92672">=&lt;/span>1; zinit light 3v1n0/zsh-bash-completions-fallback
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit wait&lt;span style="color:#e6db74">&amp;#39;1a&amp;#39;&lt;/span> lucid light-mode &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> ver&lt;span style="color:#e6db74">&amp;#39;develop&amp;#39;&lt;/span> atinit&lt;span style="color:#e6db74">&amp;#39;ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20&amp;#39;&lt;/span> atload&lt;span style="color:#e6db74">&amp;#39;_zsh_autosuggest_start&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> zsh-users/zsh-autosuggestions &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> is-snippet atload&lt;span style="color:#e6db74">&amp;#39;zstyle &amp;#34;:completion:*&amp;#34; special-dirs false&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> PZTM::completion &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> atload&lt;span style="color:#e6db74">&amp;#34;zicompinit; zicdreplay&amp;#34;&lt;/span> blockf &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> zsh-users/zsh-completions &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> atinit&lt;span style="color:#e6db74">&amp;#39;zicompinit; zicdreplay&amp;#39;&lt;/span> atload&lt;span style="color:#e6db74">&amp;#39;FAST_HIGHLIGHT[chroma-man]=&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> atclone&lt;span style="color:#e6db74">&amp;#39;(){local f;cd -q →*;for f (*~*.zwc){zcompile -Uz -- ${f}};}&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> compile&lt;span style="color:#e6db74">&amp;#39;.*fast*~*.zwc&amp;#39;&lt;/span> nocompletions atpull&lt;span style="color:#e6db74">&amp;#39;%atclone&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> zdharma-continuum/fast-syntax-highlighting &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> atload&lt;span style="color:#e6db74">&amp;#39;bindkey &amp;#34;^[[A&amp;#34; history-substring-search-up;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> bindkey &amp;#34;^[[B&amp;#34; history-substring-search-down&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> zsh-users/zsh-history-substring-search
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#blockf atpull&amp;#39;zinit creinstall -q .&amp;#39; \&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># zdharma-continuum/fast-syntax-highlighting&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>autoload -Uz _zinit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">((&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>+_comps&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> _comps&lt;span style="color:#f92672">[&lt;/span>zinit&lt;span style="color:#f92672">]=&lt;/span>_zinit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zinit cdreplay -q
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="stop-profiling">Stop Profiling&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># zprof&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title/><link>https://blog.evilolive.dev/configs/my-lit-doom-config/all-posts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.evilolive.dev/configs/my-lit-doom-config/all-posts/</guid><description>DONEAbout Fill this out Sorry
DONETest Post1 Content
YESDoom Config Headers ;;; config.el -*- lexical-binding: t; -*- ;;; packages.el -*- lexical-binding: t; no-byte-compile: t; -*- User info The real version has the proper info obviously.
(setq user-full-name &amp;#34;redacted&amp;#34; user-mail-address &amp;#34;redacted&amp;#34;) GPG/Security setup Set the settings for authorization/passwords. Don&amp;rsquo;t really use this but set anyway.
(setq auth-sources &amp;#39;(&amp;#34;~/.authinfo.gpg&amp;#34;)) System-specific Hostnames hidden here. But they look like
(defconst HOSTNAME (string-equal (system-name) &amp;#34;hostname&amp;#34;)) UI Scrolling Perhaps reduce flickering/help with speed on retina.</description><content>&lt;h2 id="about">&lt;!-- raw HTML omitted -->DONE&lt;!-- raw HTML omitted --> About&lt;/h2>
&lt;h3 id="fill-this-out">Fill this out&lt;/h3>
&lt;p>Sorry&lt;/p>
&lt;h2 id="test-post1">&lt;!-- raw HTML omitted -->DONE&lt;!-- raw HTML omitted --> Test Post1&lt;/h2>
&lt;p>Content&lt;/p>
&lt;h2 id="doom-config">&lt;!-- raw HTML omitted -->YES&lt;!-- raw HTML omitted --> Doom Config&lt;/h2>
&lt;h3 id="headers">Headers&lt;/h3>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;; config.el -*- lexical-binding: t; -*-&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;; packages.el -*- lexical-binding: t; no-byte-compile: t; -*-&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="user-info">User info&lt;/h3>
&lt;p>The real version has the proper info obviously.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq &lt;span style="color:#a6e22e">user-full-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;redacted&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user-mail-address &lt;span style="color:#e6db74">&amp;#34;redacted&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="gpg-security-setup">GPG/Security setup&lt;/h3>
&lt;p>Set the settings for authorization/passwords. Don&amp;rsquo;t really use this but set anyway.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq auth-sources &lt;span style="color:#f92672">&amp;#39;&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;~/.authinfo.gpg&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="system-specific">System-specific&lt;/h3>
&lt;p>Hostnames hidden here. But they look like&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(defconst HOSTNAME (&lt;span style="color:#a6e22e">string-equal&lt;/span> (&lt;span style="color:#a6e22e">system-name&lt;/span>) &lt;span style="color:#e6db74">&amp;#34;hostname&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ui">UI&lt;/h3>
&lt;h4 id="scrolling">Scrolling&lt;/h4>
&lt;p>Perhaps reduce flickering/help with speed on retina. See &lt;a href="https://discourse.doomemacs.org/t/why-is-emacs-doom-slow/83/3">https://discourse.doomemacs.org/t/why-is-emacs-doom-slow/83/3&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; (add-to-list &amp;#39;default-frame-alist &amp;#39;(inhibit-double-buffering . t))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="dashboard">Dashboard&lt;/h4>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Fancy splash image&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq fancy-splash-image (&lt;span style="color:#a6e22e">concat&lt;/span> doom-private-dir &lt;span style="color:#e6db74">&amp;#34;/splash/doomslant.png&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Utility Functions&lt;/p>
&lt;p>These functions are also a convenience one so don&amp;rsquo;t have to repeat them.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(defun +ved/loadlit ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Load the lit.org from ~/.doom.d or whatever the private dir is.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (find-file (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;lit.org&amp;#34;&lt;/span> doom-private-dir)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun +ved/ffchez ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Explore the chezmoi dotfiles directory since this is frequented.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (doom-project-find-file &lt;span style="color:#e6db74">&amp;#34;~/chezmoi/dotfiles/&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun +ved/loadzshlit ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Open the ZSH literate config file.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (find-file (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;~/ZSH-lit.org&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Change the mapping&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(map! :map +doom-dashboard-mode-map
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;f&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>find-file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;r&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>consult-recent-file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;p&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>doom/open-private-config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;l&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/loadlit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;c&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/ffchez
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;z&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/loadzshlit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;B&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>consult-buffer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ne &lt;span style="color:#e6db74">&amp;#34;q&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>save-buffers-kill-terminal)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Menu Change&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq +doom-dashboard-menu-sections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((&lt;span style="color:#e6db74">&amp;#34;Open File&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :icon (all-the-icons-octicon &lt;span style="color:#e6db74">&amp;#34;file-text&amp;#34;&lt;/span> :face &lt;span style="color:#e6db74">&amp;#39;doom-dashboard-menu-title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :action find-file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Recently Opened Files&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :icon (all-the-icons-octicon &lt;span style="color:#e6db74">&amp;#34;history&amp;#34;&lt;/span> :face &lt;span style="color:#e6db74">&amp;#39;doom-dashboard-menu-title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :action recentf-open-files)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Open EMACS Config Dir&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :icon (all-the-icons-faicon &lt;span style="color:#e6db74">&amp;#34;folder-open-o&amp;#34;&lt;/span> :face &lt;span style="color:#e6db74">&amp;#39;doom-dashboard-menu-title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :action doom/open-private-config)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Open EMACS Literate ORG File&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :icon (all-the-icons-fileicon &lt;span style="color:#e6db74">&amp;#34;emacs&amp;#34;&lt;/span> :face &lt;span style="color:#e6db74">&amp;#39;doom-dashboard-menu-title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :action +ved/loadlit)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Open ZSH Literate File&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :icon (all-the-icons-fileicon &lt;span style="color:#e6db74">&amp;#34;org&amp;#34;&lt;/span> :face &lt;span style="color:#e6db74">&amp;#39;doom-dashboard-menu-title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :action +ved/loadzshlit)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Open Chezmoi Dotfiles Dir&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :icon (all-the-icons-octicon &lt;span style="color:#e6db74">&amp;#34;home&amp;#34;&lt;/span> :face &lt;span style="color:#e6db74">&amp;#39;doom-dashboard-menu-title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :action +ved/ffchez)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Better Buffer Name&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq +doom-dashboard-name &lt;span style="color:#e6db74">&amp;#34; Doom&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="font">Font&lt;/h4>
&lt;p>Still trying to figure out which I like best.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq doom-font (&lt;span style="color:#a6e22e">font-spec&lt;/span> :family &lt;span style="color:#e6db74">&amp;#34;FiraMono Nerd Font&amp;#34;&lt;/span> :size &lt;span style="color:#ae81ff">13&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-big-font (&lt;span style="color:#a6e22e">font-spec&lt;/span> :family &lt;span style="color:#e6db74">&amp;#34;FiraMono Nerd Font&amp;#34;&lt;/span> :size &lt;span style="color:#ae81ff">18&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-variable-pitch-font (&lt;span style="color:#a6e22e">font-spec&lt;/span> :family &lt;span style="color:#e6db74">&amp;#34;FiraCode Nerd Font&amp;#34;&lt;/span> :size &lt;span style="color:#ae81ff">13&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-serif-font (&lt;span style="color:#a6e22e">font-spec&lt;/span> :family &lt;span style="color:#e6db74">&amp;#34;CodeNewRoman Nerd Font&amp;#34;&lt;/span> :weight &lt;span style="color:#e6db74">&amp;#39;regular&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-unicode-font doom-font)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="theme">Theme&lt;/h4>
&lt;p>Unpin doom-themes&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(unpin! doom-themes)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Got this for in case I start using one config for two computers. Maybe remove this.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;(when CRIUS (setq doom-theme &amp;#39;doom-outrun-electric))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(setq doom-theme &lt;span style="color:#e6db74">&amp;#39;doom-tokyo-night&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(setq doom-tokyo-night-padded-modeline &lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; (setq! doom-outrun-electric-brighter-comments t)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; (when DENM (setq doom-theme &amp;#39;doom-dracula))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; (when (eq doom-theme &amp;#39;doom-dracula)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; (setq! doom-dracula-colorful-headers t))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(setq! doom-themes-padded-modeline &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="modeline-settings">Modeline Settings&lt;/h4>
&lt;p>So it doesnt bump up all the way against the frame. Still might need some padding.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-buffer-file-name-style &lt;span style="color:#e6db74">&amp;#39;truncate-upto-root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-major-mode-icon &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-major-mode-color-icon &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-buffer-encoding &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-workspace-name &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-persp-name &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doom-modeline-indent-info &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> all-the-icons-scale-factor &lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Nyan Mode&lt;/p>
&lt;p>Always must have.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! nyan-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! nyan-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :after doom-modeline
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (nyan-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :custom
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (nyan-animate-nyancat &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (nyan-wavy-trail &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (nyan-bar-length &lt;span style="color:#ae81ff">27&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Set indicator colors in modeline&lt;/p>
&lt;p>I like these to also match the cursor, so below is about the same colors (some adjustments for visibility).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(custom-set-faces!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(doom-modeline-evil-insert-state :foreground &lt;span style="color:#e6db74">&amp;#34;#00eeee&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(doom-modeline-evil-normal-state :foreground &lt;span style="color:#e6db74">&amp;#34;#Cd5555&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(doom-modeline-evil-visual-state :foreground &lt;span style="color:#e6db74">&amp;#34;#6c7b8b&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(match :foreground &lt;span style="color:#e6db74">&amp;#34;#000000&amp;#34;&lt;/span> :background &lt;span style="color:#e6db74">&amp;#34;#ff02ab&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Matching cursor&lt;/p>
&lt;p>Except visual cause otherwise it&amp;rsquo;s hard to see sometimes&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq! evil-normal-state-cursor &lt;span style="color:#f92672">&amp;#39;&lt;/span>(box &lt;span style="color:#e6db74">&amp;#34;#Ee0000&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> evil-insert-state-cursor &lt;span style="color:#f92672">&amp;#39;&lt;/span>(box &lt;span style="color:#e6db74">&amp;#34;#00eeee&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> evil-visual-state-cursor &lt;span style="color:#f92672">&amp;#39;&lt;/span>((hbar &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>) &lt;span style="color:#e6db74">&amp;#34;#Ee1289&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="linenumber-colors">Linenumber colors&lt;/h4>
&lt;p>Defaults for electric were too dark, so changing it here.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! display-line-numbers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (custom-set-faces!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(line-number :foreground &lt;span style="color:#e6db74">&amp;#34;#6C7B8B&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(line-number-current-line :foreground &lt;span style="color:#e6db74">&amp;#34;#FFFFFF&amp;#34;&lt;/span> :weight bold)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="beacon">Beacon&lt;/h4>
&lt;p>Highlights the point when scrolling and changing windows and such&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! beacon)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! beacon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (beacon-mode &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq! beacon-color &lt;span style="color:#e6db74">&amp;#34;#ee1289&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> beacon-blink-delay &lt;span style="color:#ae81ff">0.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> beacon-blink-duration &lt;span style="color:#ae81ff">0.5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> beacon-blink-when-focused &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="rainbow-mode">Rainbow Mode&lt;/h4>
&lt;p>Show background of colors when colors are set.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! rainbow-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :hook ((text-mode prog-mode) &lt;span style="color:#f92672">.&lt;/span> rainbow-mode))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(add-hook! &lt;span style="color:#e6db74">&amp;#39;rainbow-mode-hook&lt;/span> (hl-line-mode (if rainbow-mode &lt;span style="color:#ae81ff">-1&lt;/span> &lt;span style="color:#ae81ff">+1&lt;/span>)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Fix color menu&lt;/p>
&lt;p>MacOS misses the thing that does colors like DeepPink2 in the menu. This fixes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(require &lt;span style="color:#e6db74">&amp;#39;facemenu&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="show-parens">Show Parens&lt;/h4>
&lt;p>Sets the colors for show parens&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(custom-set-faces!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(show-paren-match :foreground &lt;span style="color:#e6db74">&amp;#34;#2f4f4f&amp;#34;&lt;/span> :background &lt;span style="color:#e6db74">&amp;#34;#00ee00&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(show-paren-mismatch :background &lt;span style="color:#e6db74">&amp;#34;#ee0000&amp;#34;&lt;/span> :foreground &lt;span style="color:#e6db74">&amp;#34;#fffc00&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(show-paren-match-expression :background &lt;span style="color:#e6db74">&amp;#34;#00868b&amp;#34;&lt;/span> :foreground &lt;span style="color:#e6db74">&amp;#34;#ffffff&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(match :foreground &lt;span style="color:#e6db74">&amp;#34;#000000&amp;#34;&lt;/span> :background &lt;span style="color:#e6db74">&amp;#34;#Ff82ab&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="org">Org&lt;/h3>
&lt;p>First need to set the org directory&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq org-directory &lt;span style="color:#e6db74">&amp;#34;~/org/&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="allow-encryption-in-org-files">Allow encryption in org files&lt;/h4>
&lt;p>This version has my email redacted&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (use-package! org-crypt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :after org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq! org-tags-exclude-from-inheritance &lt;span style="color:#f92672">&amp;#39;&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;crypt&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;read_only&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-crypt-key &lt;span style="color:#e6db74">&amp;#34;redacted&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-crypt-disable-auto-save &lt;span style="color:#e6db74">&amp;#34;ask&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (org-crypt-use-before-save-magic)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="read-only-sections">Read-only sections&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(defun unpackaged/org-next-heading-tagged (tag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Move to beginning of next heading tagged with TAG and return point, or return nil if none found.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (&lt;span style="color:#a6e22e">re-search-forward&lt;/span> (rx-to-string &lt;span style="color:#f92672">`&lt;/span>(seq bol (&lt;span style="color:#a6e22e">1+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>) (&lt;span style="color:#a6e22e">1+&lt;/span> blank) (optional (&lt;span style="color:#a6e22e">1+&lt;/span> not-newline) (&lt;span style="color:#a6e22e">1+&lt;/span> blank))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Beginning of tags&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Possible other tags&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (0+ (seq (&lt;span style="color:#a6e22e">1+&lt;/span> (not (any &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span> blank))) &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; The tag that matters&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">,&lt;/span>tag &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#39;noerror&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> (&lt;span style="color:#a6e22e">match-beginning&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun ap/org-remove-read-only ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Remove read-only text properties from Org entries tagged \&amp;#34;read_only\&amp;#34; in current buffer.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let ((inhibit-read-only &lt;span style="color:#66d9ef">t&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (org-with-wide-buffer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> (&lt;span style="color:#a6e22e">point-min&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (while (unpackaged/org-next-heading-tagged &lt;span style="color:#e6db74">&amp;#34;read_only&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">remove-text-properties&lt;/span> (&lt;span style="color:#a6e22e">point&lt;/span>) (progn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (org-end-of-subtree)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">point&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(read_only &lt;span style="color:#66d9ef">t&lt;/span>))))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(add-hook! &lt;span style="color:#e6db74">&amp;#39;org-mode-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>ap/org-mark-read-only)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ligatures">Ligatures&lt;/h4>
&lt;p>Some customizatons and additions&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Org&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (appendq! +ligatures-extra-symbols
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(:title &lt;span style="color:#e6db74">&amp;#34;T&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :subtitle &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :author &lt;span style="color:#e6db74">&amp;#34;Ⓐ&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :property &lt;span style="color:#e6db74">&amp;#34;∹&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :name &lt;span style="color:#e6db74">&amp;#34;⒩&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :emptycheck &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :checkedbox &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :partialbox &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :email &lt;span style="color:#e6db74">&amp;#34;﫯&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (set-ligatures! &lt;span style="color:#e6db74">&amp;#39;org-mode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :merge &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :title &lt;span style="color:#e6db74">&amp;#34;#+TITLE:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :title &lt;span style="color:#e6db74">&amp;#34;#+title:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :subtitle &lt;span style="color:#e6db74">&amp;#34;#+SUBTITLE:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :subtitle &lt;span style="color:#e6db74">&amp;#34;#+subtitle:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :author &lt;span style="color:#e6db74">&amp;#34;#+AUTHOR:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :author &lt;span style="color:#e6db74">&amp;#34;#+author:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :property &lt;span style="color:#e6db74">&amp;#34;#+PROPERTY:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :property &lt;span style="color:#e6db74">&amp;#34;#+property:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :name &lt;span style="color:#e6db74">&amp;#34;#+NAME:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :name &lt;span style="color:#e6db74">&amp;#34;#+name:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :emptycheck &lt;span style="color:#e6db74">&amp;#34;[ ]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :checkedbox &lt;span style="color:#e6db74">&amp;#34;[X]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :partialbox &lt;span style="color:#e6db74">&amp;#34;[-]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :email &lt;span style="color:#e6db74">&amp;#34;#+email:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :email &lt;span style="color:#e6db74">&amp;#34;#+EMAIL:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>General&lt;/p>
&lt;p>Fix some that don&amp;rsquo;t show up on Mac for some fucking reason.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(plist-put! +ligatures-extra-symbols
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :true &lt;span style="color:#e6db74">&amp;#34;⊨&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :false &lt;span style="color:#e6db74">&amp;#34;⊭&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :str &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :bool &lt;span style="color:#e6db74">&amp;#34;ℬ&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="templates">Templates&lt;/h4>
&lt;p>I&amp;rsquo;ve got my own templates I like to use.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(set-file-template! &lt;span style="color:#e6db74">&amp;#34;/\\(?:Sources/.*\\|README\\)\\.org$&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :trigger &lt;span style="color:#e6db74">&amp;#34;__head&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :mode &lt;span style="color:#e6db74">&amp;#39;org-mode&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="org-appear">Org Appear&lt;/h4>
&lt;p>This makes org things show when the point is near/in it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! org-appear)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! org-appear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :hook (org-mode &lt;span style="color:#f92672">.&lt;/span> org-appear-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq! org-appear-autoemphasis &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-appear-autosubmarkers &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="general-org-settings">General Org Settings&lt;/h4>
&lt;p>Hide the markers, inherit properties (I think that&amp;rsquo;s needed for the read-only/encryption one), add time to agenda done (not that I use it).
I forget what invisible-edits does.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-use-property-inheritance &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-log-done &lt;span style="color:#e6db74">&amp;#39;time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-catch-invisible-edits &lt;span style="color:#e6db74">&amp;#39;smart&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; org-export-with-sub-superscripts &amp;#39;{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-ellipsis &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-support-shift-select &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-hide-emphasis-markers &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org-id-link-to-org-use-id &lt;span style="color:#e6db74">&amp;#39;create-if-interactive-and-no-custom-id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(add-hook! org-mode (electric-indent-local-mode &lt;span style="color:#ae81ff">-1&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(global-prettify-symbols-mode &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="org-reformat-buffer">Org reformat buffer&lt;/h4>
&lt;p>&lt;a href="https://github.com/zzamboni/dot-doom/blob/master/doom.org#visual-session-and-window-settings">https://github.com/zzamboni/dot-doom/blob/master/doom.org#visual-session-and-window-settings&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! org (defun zz/org-reformat-buffer ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (y-or-n-p &lt;span style="color:#e6db74">&amp;#34;Really format current buffer? &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let ((document (org-element-interpret-data (org-element-parse-buffer))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">erase-buffer&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">insert&lt;/span> document)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> (&lt;span style="color:#a6e22e">point-min&lt;/span>))))))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="disable-company-in-org">Disable Company in Org&lt;/h4>
&lt;p>It&amp;rsquo;s annoying&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (after! company (defun ved/org-mode-hook()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (featurep! :completion company)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">message&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Disabling company-mode while in org-capture...&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (company-mode &lt;span style="color:#ae81ff">-1&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (after! org (add-hook! org-capture-mode (ved/org-mode-hook)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="auto-tangle">Auto-Tangle&lt;/h4>
&lt;p>Save some effort. Requires you put a property, unless you set &lt;code>org-auto-tangle-default&lt;/code> to true. Otherwise use &lt;code>#+auto_tangle: t&lt;/code> at the top.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! org-auto-tangle)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! org-auto-tangle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>:defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>:hook (org-mode &lt;span style="color:#f92672">.&lt;/span> org-auto-tangle-mode))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="org-ui">ORG UI&lt;/h4>
&lt;p>Setting up org stuff to get it to look better I guess.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-hook! &lt;span style="color:#e6db74">&amp;#39;org-mode-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>mixed-pitch-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-hook! &lt;span style="color:#e6db74">&amp;#39;org-mode-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>solaire-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq mixed-pitch-variable-pitch-cursor &lt;span style="color:#66d9ef">nil&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(after! org-superstar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq org-superstar-prettify-item-bullets &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="more-prettify">More prettify&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! org (custom-set-faces!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-1 :weight extra-bold :height &lt;span style="color:#ae81ff">1.25&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-2 :weight bold :height &lt;span style="color:#ae81ff">1.15&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-3 :weight bold :height &lt;span style="color:#ae81ff">1.12&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-4 :weight semi-bold :height &lt;span style="color:#ae81ff">1.09&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-5 :weight semi-bold :height &lt;span style="color:#ae81ff">1.06&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-6 :weight semi-bold :height &lt;span style="color:#ae81ff">1.03&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-8 :weight semi-bold)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(outline-9 :weight semi-bold)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(org-document-title :height &lt;span style="color:#ae81ff">1.2&lt;/span>)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="keybinds-evil-org-overrides">Keybinds Evil-org overrides&lt;/h4>
&lt;p>Just some annoying rebinds that I don&amp;rsquo;t want.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(map! :map evil-org-mode-map
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ei &lt;span style="color:#e6db74">&amp;#34;C-d&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>org-delete-char
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :ie &lt;span style="color:#e6db74">&amp;#34;C-h&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>embark-help-command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="general-settings">General Settings&lt;/h3>
&lt;p>Set line numbers and some various things I like to have.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> display-line-numbers-type &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> history-delete-duplicates &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> elint-ignored-warnings &lt;span style="color:#f92672">&amp;#39;&lt;/span>(unbound-reference unbound-assignment)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ediff-split-window-function &lt;span style="color:#e6db74">&amp;#39;split-window-horizontally&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> show-paren-style &lt;span style="color:#e6db74">&amp;#39;mixed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> show-paren-when-point-in-periphery &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> show-paren-when-point-inside-paren &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> show-paren-delay &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kill-whole-line &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> evil-move-cursor-back &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> evil-kill-on-visual-paste &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> evil-visual-region-expanded &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> evil-want-fine-undo &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auto-save-default &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scroll-margin &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scroll-preserve-screen-position &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scroll-conservatively &lt;span style="color:#ae81ff">1337&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> indent-tabs-mode &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tab-width &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(blink-cursor-mode &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(setq display-time-24hr-format &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(display-time-mode &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="keybinds">Keybinds&lt;/h3>
&lt;h4 id="mac-keybindings">Mac Keybindings&lt;/h4>
&lt;ul>
&lt;li>Mac specific keybinds (set &lt;code>fn&lt;/code> key to &lt;code>hyper&lt;/code>)&lt;/li>
&lt;li>Also makes &lt;code>Super Left-Click&lt;/code> to &lt;code>Middle Click&lt;/code>&lt;/li>
&lt;li>&lt;code>Super&lt;/code> is &lt;code>Command&lt;/code> on Mac.&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(when IS-MAC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq! ns-function-modifier &lt;span style="color:#e6db74">&amp;#39;hyper&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">define-key&lt;/span> key-translation-map (kbd &lt;span style="color:#e6db74">&amp;#34;&amp;lt;s-mouse-1&amp;gt;&amp;#34;&lt;/span>) (kbd &lt;span style="color:#e6db74">&amp;#34;&amp;lt;mouse-2&amp;gt;&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="general-keybindings">General Keybindings&lt;/h4>
&lt;p>I hate some of the remaps, so this puts it to how I like it/used to it from generic emacs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(map!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gni &lt;span style="color:#e6db74">&amp;#34;C-k&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>kill-line
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-y&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>yank-from-kill-ring
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gniv &lt;span style="color:#e6db74">&amp;#34;C-e&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>doom/forward-to-last-non-comment-or-eol
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gniv &lt;span style="color:#e6db74">&amp;#34;C-a&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>doom/backward-to-bol-or-indent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :n &lt;span style="color:#e6db74">&amp;#34;U&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>undo-tree-visualize
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-U&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>undo-tree-visualize
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gni &lt;span style="color:#e6db74">&amp;#34;C-d&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;delete-char&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-SPC&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>set-mark-command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-v&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>scroll-up-command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-x C-f&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>find-file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-w&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>kill-region
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;C-x C-s&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>save-buffer)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>delete-char&lt;/code> doesn&amp;rsquo;t work in org-mode for some reason&amp;hellip; (as gei)&lt;/p>
&lt;h4 id="editing-shortcuts">Editing shortcuts&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(map!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gn &lt;span style="color:#e6db74">&amp;#34;H-l&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/loadlit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gn &lt;span style="color:#e6db74">&amp;#34;H-r&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/ffchez
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gn &lt;span style="color:#e6db74">&amp;#34;H-z&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/loadzshlit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gn &lt;span style="color:#e6db74">&amp;#34;H-m&amp;#34;&lt;/span> (cmd! (find-file (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;~/chezmoi/dotfiles/.chezmoi.toml.tmpl&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gn &lt;span style="color:#e6db74">&amp;#34;H-n&amp;#34;&lt;/span> (cmd! (doom-project-find-file &lt;span style="color:#e6db74">&amp;#34;~/chezmoi/dotfiles/dot_config/nvim/&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="whichkey">Whichkey&lt;/h4>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>General Settings&lt;/p>
&lt;ul>
&lt;li>First faster pop-up&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! which-key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq which-key-idle-delay &lt;span style="color:#ae81ff">0.5&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Customizations&lt;/p>
&lt;ul>
&lt;li>Remove redundant prefixes (stolen from &lt;a href="https://tecosaur.github.io/emacs-config/config.html#company">tecosaur&lt;/a>)&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq which-key-allow-multiple-replacements &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(after! which-key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (pushnew!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> which-key-replacement-alist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\\`+?evil[-:]?\\(?:a-\\)?\\(.*\\)&amp;#34;&lt;/span>) &lt;span style="color:#f92672">.&lt;/span> (&lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;◂\\1&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((&lt;span style="color:#e6db74">&amp;#34;\\`g s&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\\`evilem--?motion-\\(.*\\)&amp;#34;&lt;/span>) &lt;span style="color:#f92672">.&lt;/span> (&lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;◃\\1&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="file-modes">File Modes&lt;/h3>
&lt;h4 id="vim">VIM&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! vimrc-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! vimrc-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands vimrc-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="salt">Salt&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! salt-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! salt-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands salt-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="gitlab">Gitlab&lt;/h4>
&lt;p>For &lt;code>.gitlabci&lt;/code> file&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! gitlab-ci-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(package! gitlab-ci-mode-flycheck)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! gitlab-ci-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands gitlab-ci-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(use-package! gitlab-ci-mode-flycheck
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands gitlab-ci-mode-flycheck)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="puppet">Puppet&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! puppet-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! puppet-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands puppet-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="jenkinsfile">Jenkinsfile&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! groovy-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(package! jenkinsfile-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(use-package! jenkinsfile-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>:commands jenkinsfile-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(use-package! groovy-mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>:commands groovy-mode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="smart-parens">Smart Parens&lt;/h3>
&lt;p>First thing is stop duplicates for quotes in vim, lisp, and org modes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! smartparens (sp-local-pair &lt;span style="color:#f92672">&amp;#39;&lt;/span>(lisp-mode org-mode) &lt;span style="color:#e6db74">&amp;#34;`&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;`&amp;#34;&lt;/span> :actions &lt;span style="color:#66d9ef">nil&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(after! smartparens (sp-local-pair &lt;span style="color:#f92672">&amp;#39;&lt;/span>(lisp-mode org-mode) &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span> :actions &lt;span style="color:#66d9ef">nil&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(after! smartparens (sp-local-pair &lt;span style="color:#f92672">&amp;#39;&lt;/span>(vimrc-mode) &lt;span style="color:#e6db74">&amp;#34;\&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\&amp;#34;&amp;#34;&lt;/span> :actions &lt;span style="color:#66d9ef">nil&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="bracket-newline">Bracket newline&lt;/h3>
&lt;p>Lets you put a newline and move the point when between brackets and such. Very helpful with things like HCL/Terraform.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(defun +ved/new-line-dwim ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let ((break-open-pair (or (and (looking-back &lt;span style="color:#e6db74">&amp;#34;{&amp;#34;&lt;/span>) (&lt;span style="color:#a6e22e">looking-at&lt;/span> &lt;span style="color:#e6db74">&amp;#34;}&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (and (looking-back &lt;span style="color:#e6db74">&amp;#34;&amp;gt;&amp;#34;&lt;/span>) (&lt;span style="color:#a6e22e">looking-at&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (and (looking-back &lt;span style="color:#e6db74">&amp;#34;(&amp;#34;&lt;/span>) (&lt;span style="color:#a6e22e">looking-at&lt;/span> &lt;span style="color:#e6db74">&amp;#34;)&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (and (looking-back &lt;span style="color:#e6db74">&amp;#34;\\[&amp;#34;&lt;/span>) (&lt;span style="color:#a6e22e">looking-at&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\\]&amp;#34;&lt;/span>)))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (newline)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when break-open-pair
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (save-excursion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (newline)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (indent-for-tab-command)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (indent-for-tab-command)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(map!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :i &lt;span style="color:#e6db74">&amp;#34;M-RET&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>+ved/new-line-dwim)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="company">Company&lt;/h3>
&lt;p>Customizations for company&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! company-ispell :disable &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! company
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (set-company-backend! &lt;span style="color:#e6db74">&amp;#39;text-mode&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(:separate company-dabbrev company-yasnippet)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="company-box">Company Box&lt;/h4>
&lt;p>Make the box appear less quickly&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! company-box
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq! company-box-doc-delay &lt;span style="color:#ae81ff">2&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="frame-dimensions">Frame dimensions&lt;/h3>
&lt;p>See autoload.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(add-hook &lt;span style="color:#e6db74">&amp;#39;kill-emacs-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>my-save-frame-dimensions-h)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(my-restore-frame-dimensions-h)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;; autoload.el -*- lexical-binding: t; -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;;###autoload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defmacro unpackaged/def-org-maybe-surround (&lt;span style="color:#66d9ef">&amp;amp;rest&lt;/span> keys)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Define and bind interactive commands for each of KEYS that surround the region or insert text.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Commands are bound in &lt;/span>&lt;span style="color:#e6db74">`org-mode-map&amp;#39;&lt;/span>&lt;span style="color:#e6db74"> to each of KEYS. If the
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">region is active, commands surround it with the key character,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">otherwise call &lt;/span>&lt;span style="color:#e6db74">`org-self-insert-command&amp;#39;&lt;/span>&lt;span style="color:#e6db74">.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>(progn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">,@&lt;/span>(cl-loop for key in keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> for name &lt;span style="color:#a6e22e">=&lt;/span> (&lt;span style="color:#a6e22e">intern&lt;/span> (&lt;span style="color:#a6e22e">concat&lt;/span> &lt;span style="color:#e6db74">&amp;#34;unpackaged/org-maybe-surround-&amp;#34;&lt;/span> key))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> for docstring &lt;span style="color:#a6e22e">=&lt;/span> (&lt;span style="color:#a6e22e">format&lt;/span> &lt;span style="color:#e6db74">&amp;#34;If region is active, surround it with \&amp;#34;%s\&amp;#34;, otherwise call &lt;/span>&lt;span style="color:#e6db74">`org-self-insert-command&amp;#39;&lt;/span>&lt;span style="color:#e6db74">.&amp;#34;&lt;/span> key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> collect &lt;span style="color:#f92672">`&lt;/span>(defun &lt;span style="color:#f92672">,&lt;/span>name ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">,&lt;/span>docstring
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (if (region-active-p)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let ((beg (&lt;span style="color:#a6e22e">region-beginning&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (end (&lt;span style="color:#a6e22e">region-end&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (save-excursion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> end)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">insert&lt;/span> &lt;span style="color:#f92672">,&lt;/span>key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> beg)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">insert&lt;/span> &lt;span style="color:#f92672">,&lt;/span>key)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">call-interactively&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>org-self-insert-command)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> collect &lt;span style="color:#f92672">`&lt;/span>(&lt;span style="color:#a6e22e">define-key&lt;/span> org-mode-map (kbd &lt;span style="color:#f92672">,&lt;/span>key) &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>name))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;;###autoload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun ap/org-mark-read-only ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Mark all entries in the buffer tagged \&amp;#34;read_only\&amp;#34; with read-only text properties.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (org-with-wide-buffer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> (&lt;span style="color:#a6e22e">point-min&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (while (unpackaged/org-next-heading-tagged &lt;span style="color:#e6db74">&amp;#34;read_only&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">add-text-properties&lt;/span> (&lt;span style="color:#a6e22e">point&lt;/span>) (progn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (org-end-of-subtree)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">point&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(read_only &lt;span style="color:#66d9ef">t&lt;/span>)))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;;###autoload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun my-save-frame-dimensions-h ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Caches the current frame dimensions and position so we can
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> restore it when we launch emacs again.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (if-let ((main-frame (&lt;span style="color:#a6e22e">car-safe&lt;/span> (&lt;span style="color:#a6e22e">visible-frame-list&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (doom-store-put &lt;span style="color:#e6db74">&amp;#39;last-frame-size&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">list&lt;/span> (frame-position main-frame)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (frame-width main-frame)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (frame-height main-frame)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">frame-parameter&lt;/span> main-frame &lt;span style="color:#e6db74">&amp;#39;fullscreen&lt;/span>)))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;;###autoload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun my-restore-frame-dimensions-h ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (if-let (dims (doom-store-get &lt;span style="color:#e6db74">&amp;#39;last-frame-size&lt;/span> &lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (cl-destructuring-bind ((left &lt;span style="color:#f92672">.&lt;/span> top) width height fullscreen) dims
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq initial-frame-alist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">append&lt;/span> initial-frame-alist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>((left &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#f92672">,&lt;/span>left)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (top &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#f92672">,&lt;/span>top)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (width &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#f92672">,&lt;/span>width)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (height &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#f92672">,&lt;/span>height)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (fullscreen &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#f92672">,&lt;/span>fullscreen)))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-to-list &lt;span style="color:#e6db74">&amp;#39;default-frame-alist&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(height &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#ae81ff">52&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-to-list &lt;span style="color:#e6db74">&amp;#39;default-frame-alist&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(width &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#ae81ff">105&lt;/span>))))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="my-lisp">My Lisp&lt;/h3>
&lt;h4 id="timestamping">Timestamping&lt;/h4>
&lt;p>Creates a timestamp line and modifies it as appropriate.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(add-load-path! &lt;span style="color:#e6db74">&amp;#34;mylisps/&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(require &lt;span style="color:#e6db74">&amp;#39;ved-timestamping&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="projectile">Projectile&lt;/h3>
&lt;p>Should be disabled, but just in case make it not update.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! projectile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq projectile-auto-update-cache &lt;span style="color:#66d9ef">nil&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="dash">Dash&lt;/h3>
&lt;p>This is a document lookup tool for MacOS.&lt;/p>
&lt;h4 id="install-package-if-macos">Install package if MacOS&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(when IS-MAC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(package! dash-at-point))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="configure-if-mac">Configure if mac&lt;/h4>
&lt;ul>
&lt;li>TODO Figure out what hyper is on linux&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(when IS-MAC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (use-package! dash-at-point
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands (dash-at-point dash-at-point-with-docset))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-to-list &lt;span style="color:#e6db74">&amp;#39;dash-at-point-mode-alist&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(elisp-mode &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;elisp&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-to-list &lt;span style="color:#e6db74">&amp;#39;dash-at-point-mode-alist&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(nix-mode &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;nix&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-to-list &lt;span style="color:#e6db74">&amp;#39;dash-at-point-mode-alist&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(python-mode &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;py3&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (map!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gni &lt;span style="color:#e6db74">&amp;#34;H-d&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;dash-at-point&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :gni &lt;span style="color:#e6db74">&amp;#34;H-p&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;dash-at-point-with-docset&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="unicode-font-stuff">Unicode Font Stuff&lt;/h3>
&lt;p>Not sure if this is helping, still have missing ligatures.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(unicode-fonts-setup)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="rainbow-delimeters-config">Rainbow Delimeters Config&lt;/h3>
&lt;p>Lua doesn&amp;rsquo;t have it for some reason, so we set it up.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(add-hook! &lt;span style="color:#e6db74">&amp;#39;lua-mode-hook&lt;/span> (rainbow-delimiters-mode))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="editorconfig">Editorconfig&lt;/h3>
&lt;h4 id="custom-major-modes">Custom major modes&lt;/h4>
&lt;p>Mostly for work but sometimes things need it (like &lt;code>.tmpl&lt;/code> for &lt;code>chezmoi&lt;/code>)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(package! editorconfig-custom-majormode)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(after! editorconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (use-package! editorconfig-custom-majormode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config (add-hook! &lt;span style="color:#e6db74">&amp;#39;editorconfig-custom-hooks&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;editorconfig-custom-majormode&lt;/span>)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item></channel></rss>